
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: Microsoft.Xrm.Sdk.Client.ProxyTypesAssemblyAttribute()]
[assembly: System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.71")]

namespace Sample.D365.Entities
{
	
	
	/// <summary>
	/// Grouping of security privileges. Users are assigned roles that authorize their access to the Microsoft CRM system.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
  [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("role")]
  public partial class Role : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
  {

  public static class Fields
  {
    public const string BusinessUnitId = "businessunitid";
    public const string CanBeDeleted = "canbedeleted";
    public const string ComponentState = "componentstate";
    public const string CreatedBy = "createdby";
    public const string CreatedOn = "createdon";
    public const string CreatedOnBehalfBy = "createdonbehalfby";
    public const string ImportSequenceNumber = "importsequencenumber";
    public const string IsCustomizable = "iscustomizable";
    public const string IsInherited = "isinherited";
    public const string IsManaged = "ismanaged";
    public const string ModifiedBy = "modifiedby";
    public const string ModifiedOn = "modifiedon";
    public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
    public const string Name = "name";
    public const string OrganizationId = "organizationid";
    public const string OverriddenCreatedOn = "overriddencreatedon";
    public const string OverwriteTime = "overwritetime";
    public const string ParentRoleId = "parentroleid";
    public const string ParentRootRoleId = "parentrootroleid";
    public const string RoleId = "roleid";
    public const string Id = "roleid";
    public const string RoleIdUnique = "roleidunique";
    public const string RoleTemplateId = "roletemplateid";
    public const string SolutionId = "solutionid";
    public const string VersionNumber = "versionnumber";
    public const string lk_role_createdonbehalfby = "lk_role_createdonbehalfby";
    public const string lk_role_modifiedonbehalfby = "lk_role_modifiedonbehalfby";
    public const string lk_rolebase_createdby = "lk_rolebase_createdby";
    public const string lk_rolebase_modifiedby = "lk_rolebase_modifiedby";
    public const string Referencingrole_parent_role = "role_parent_role";
    public const string Referencingrole_parent_root_role = "role_parent_root_role";
  }

  /// <summary>
  /// Default Constructor.
  /// </summary>
  [System.Diagnostics.DebuggerNonUserCode()]
  public Role() :
      base(EntityLogicalName)
  {
  }

  public const string EntityLogicalName = "role";

  public const string EntitySchemaName = "Role";

  public const string PrimaryIdAttribute = "roleid";

  public const string PrimaryNameAttribute = "name";

  public const string EntityLogicalCollectionName = "roles";

  public const string EntitySetName = "roles";

  public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

  public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;

  [System.Diagnostics.DebuggerNonUserCode()]
  private void OnPropertyChanged(string propertyName)
  {
    if ((this.PropertyChanged != null))
    {
      this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
    }
  }

  [System.Diagnostics.DebuggerNonUserCode()]
  private void OnPropertyChanging(string propertyName)
  {
    if ((this.PropertyChanging != null))
    {
      this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
    }
  }

  /// <summary>
  /// Unique identifier of the business unit with which the role is associated.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitid")]
  public Microsoft.Xrm.Sdk.EntityReference BusinessUnitId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("businessunitid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("BusinessUnitId");
      this.SetAttributeValue("businessunitid", value);
      this.OnPropertyChanged("BusinessUnitId");
    }
  }

  /// <summary>
  /// Tells whether the role can be deleted.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("canbedeleted")]
  public Microsoft.Xrm.Sdk.BooleanManagedProperty CanBeDeleted
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("canbedeleted");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("CanBeDeleted");
      this.SetAttributeValue("canbedeleted", value);
      this.OnPropertyChanged("CanBeDeleted");
    }
  }

  /// <summary>
  /// For internal use only.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
  public Microsoft.Xrm.Sdk.OptionSetValue ComponentState
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("componentstate");
    }
  }

  /// <summary>
  /// For internal use only.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
  public virtual ComponentState? ComponentStateEnum
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return ((ComponentState?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
    }
  }

  /// <summary>
  /// Unique identifier of the user who created the role.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
  public Microsoft.Xrm.Sdk.EntityReference CreatedBy
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
    }
  }

  /// <summary>
  /// Date and time when the role was created.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
  public System.Nullable<System.DateTime> CreatedOn
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
    }
  }

  /// <summary>
  /// Unique identifier of the delegate user who created the role.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
  public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("CreatedOnBehalfBy");
      this.SetAttributeValue("createdonbehalfby", value);
      this.OnPropertyChanged("CreatedOnBehalfBy");
    }
  }

  /// <summary>
  /// Unique identifier of the data import or data migration that created this record.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
  public System.Nullable<int> ImportSequenceNumber
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("ImportSequenceNumber");
      this.SetAttributeValue("importsequencenumber", value);
      this.OnPropertyChanged("ImportSequenceNumber");
    }
  }

  /// <summary>
  /// Information that specifies whether this component can be customized.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizable")]
  public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomizable");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("IsCustomizable");
      this.SetAttributeValue("iscustomizable", value);
      this.OnPropertyChanged("IsCustomizable");
    }
  }

  /// <summary>
  /// Role is inherited by users from team membership, if role associated with team.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isinherited")]
  public Microsoft.Xrm.Sdk.OptionSetValue IsInherited
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("isinherited");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("IsInherited");
      this.SetAttributeValue("isinherited", value);
      this.OnPropertyChanged("IsInherited");
    }
  }

  /// <summary>
  /// Role is inherited by users from team membership, if role associated with team.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isinherited")]
  public virtual IsInherited? IsInheritedEnum
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return ((IsInherited?)(EntityOptionSetEnum.GetEnum(this, "isinherited")));
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("IsInherited");
      this.SetAttributeValue("isinherited", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
      this.OnPropertyChanged("IsInherited");
    }
  }

  /// <summary>
  /// Indicates whether the solution component is part of a managed solution.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
  public System.Nullable<bool> IsManaged
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
    }
  }

  /// <summary>
  /// Unique identifier of the user who last modified the role.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
  public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
    }
  }

  /// <summary>
  /// Date and time when the role was last modified.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
  public System.Nullable<System.DateTime> ModifiedOn
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
    }
  }

  /// <summary>
  /// Unique identifier of the delegate user who last modified the role.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
  public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("ModifiedOnBehalfBy");
      this.SetAttributeValue("modifiedonbehalfby", value);
      this.OnPropertyChanged("ModifiedOnBehalfBy");
    }
  }

  /// <summary>
  /// Name of the role.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
  public string Name
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("name");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Name");
      this.SetAttributeValue("name", value);
      this.OnPropertyChanged("Name");
    }
  }

  /// <summary>
  /// Unique identifier of the organization associated with the role.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
  public System.Nullable<System.Guid> OrganizationId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("organizationid");
    }
  }

  /// <summary>
  /// Date and time that the record was migrated.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
  public System.Nullable<System.DateTime> OverriddenCreatedOn
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("OverriddenCreatedOn");
      this.SetAttributeValue("overriddencreatedon", value);
      this.OnPropertyChanged("OverriddenCreatedOn");
    }
  }

  /// <summary>
  /// For internal use only.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
  public System.Nullable<System.DateTime> OverwriteTime
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
    }
  }

  /// <summary>
  /// Unique identifier of the parent role.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentroleid")]
  public Microsoft.Xrm.Sdk.EntityReference ParentRoleId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentroleid");
    }
  }

  /// <summary>
  /// Unique identifier of the parent root role.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentrootroleid")]
  public Microsoft.Xrm.Sdk.EntityReference ParentRootRoleId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentrootroleid");
    }
  }

  /// <summary>
  /// Unique identifier of the role.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("roleid")]
  public System.Nullable<System.Guid> RoleId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("roleid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("RoleId");
      this.SetAttributeValue("roleid", value);
      if (value.HasValue)
      {
        base.Id = value.Value;
      }
      else
      {
        base.Id = System.Guid.Empty;
      }
      this.OnPropertyChanged("RoleId");
    }
  }

  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("roleid")]
  public override System.Guid Id
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return base.Id;
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.RoleId = value;
    }
  }

  /// <summary>
  /// For internal use only.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("roleidunique")]
  public System.Nullable<System.Guid> RoleIdUnique
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("roleidunique");
    }
  }

  /// <summary>
  /// Unique identifier of the role template that is associated with the role.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("roletemplateid")]
  public Microsoft.Xrm.Sdk.EntityReference RoleTemplateId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("roletemplateid");
    }
  }

  /// <summary>
  /// Unique identifier of the associated solution.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
  public System.Nullable<System.Guid> SolutionId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
    }
  }

  /// <summary>
  /// Version number of the role.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
  public System.Nullable<long> VersionNumber
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
    }
  }

  /// <summary>
  /// 1:N role_parent_role
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("role_parent_role", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
  public System.Collections.Generic.IEnumerable<Role> Referencedrole_parent_role
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<Role>("role_parent_role", Microsoft.Xrm.Sdk.EntityRole.Referenced);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Referencedrole_parent_role");
      this.SetRelatedEntities<Role>("role_parent_role", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
      this.OnPropertyChanged("Referencedrole_parent_role");
    }
  }

  /// <summary>
  /// 1:N role_parent_root_role
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("role_parent_root_role", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
  public System.Collections.Generic.IEnumerable<Role> Referencedrole_parent_root_role
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<Role>("role_parent_root_role", Microsoft.Xrm.Sdk.EntityRole.Referenced);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Referencedrole_parent_root_role");
      this.SetRelatedEntities<Role>("role_parent_root_role", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
      this.OnPropertyChanged("Referencedrole_parent_root_role");
    }
  }

  /// <summary>
  /// N:N systemuserroles_association
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("systemuserroles_association")]
  public System.Collections.Generic.IEnumerable<SystemUser> systemuserroles_association
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<SystemUser>("systemuserroles_association", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("systemuserroles_association");
      this.SetRelatedEntities<SystemUser>("systemuserroles_association", null, value);
      this.OnPropertyChanged("systemuserroles_association");
    }
  }

  /// <summary>
  /// N:N teamroles_association
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("teamroles_association")]
  public System.Collections.Generic.IEnumerable<Team> teamroles_association
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<Team>("teamroles_association", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("teamroles_association");
      this.SetRelatedEntities<Team>("teamroles_association", null, value);
      this.OnPropertyChanged("teamroles_association");
    }
  }

  /// <summary>
  /// N:1 lk_role_createdonbehalfby
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_role_createdonbehalfby")]
  public SystemUser lk_role_createdonbehalfby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntity<SystemUser>("lk_role_createdonbehalfby", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("lk_role_createdonbehalfby");
      this.SetRelatedEntity<SystemUser>("lk_role_createdonbehalfby", null, value);
      this.OnPropertyChanged("lk_role_createdonbehalfby");
    }
  }

  /// <summary>
  /// N:1 lk_role_modifiedonbehalfby
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_role_modifiedonbehalfby")]
  public SystemUser lk_role_modifiedonbehalfby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntity<SystemUser>("lk_role_modifiedonbehalfby", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("lk_role_modifiedonbehalfby");
      this.SetRelatedEntity<SystemUser>("lk_role_modifiedonbehalfby", null, value);
      this.OnPropertyChanged("lk_role_modifiedonbehalfby");
    }
  }

  /// <summary>
  /// N:1 lk_rolebase_createdby
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_rolebase_createdby")]
  public SystemUser lk_rolebase_createdby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntity<SystemUser>("lk_rolebase_createdby", null);
    }
  }

  /// <summary>
  /// N:1 lk_rolebase_modifiedby
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_rolebase_modifiedby")]
  public SystemUser lk_rolebase_modifiedby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntity<SystemUser>("lk_rolebase_modifiedby", null);
    }
  }

  /// <summary>
  /// N:1 role_parent_role
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentroleid")]
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("role_parent_role", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
  public Role Referencingrole_parent_role
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntity<Role>("role_parent_role", Microsoft.Xrm.Sdk.EntityRole.Referencing);
    }
  }

  /// <summary>
  /// N:1 role_parent_root_role
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentrootroleid")]
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("role_parent_root_role", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
  public Role Referencingrole_parent_root_role
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntity<Role>("role_parent_root_role", Microsoft.Xrm.Sdk.EntityRole.Referencing);
    }
  }

  /// <summary>
  /// Constructor for populating via LINQ queries given a LINQ anonymous type
  /// <param name="anonymousType">LINQ anonymous type.</param>
  /// </summary>
  [System.Diagnostics.DebuggerNonUserCode()]
  public Role(object anonymousType) :
      this()
  {
    foreach (var p in anonymousType.GetType().GetProperties())
    {
      var value = p.GetValue(anonymousType, null);
      var name = p.Name.ToLower();

      if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
      {
        value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
        name = name.Remove(name.Length - "enum".Length);
      }

      switch (name)
      {
        case "id":
          base.Id = (System.Guid)value;
          Attributes["roleid"] = base.Id;
          break;
        case "roleid":
          var id = (System.Nullable<System.Guid>)value;
          if (id == null) { continue; }
          base.Id = id.Value;
          Attributes[name] = base.Id;
          break;
        case "formattedvalues":
          // Add Support for FormattedValues
          FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
          break;
        default:
          Attributes[name] = value;
          break;
      }
    }
  }
}

/// <summary>
/// Person with access to the Microsoft CRM system and who owns objects in the Microsoft CRM database.
/// </summary>
[System.Runtime.Serialization.DataContractAttribute()]
[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("systemuser")]
public partial class SystemUser : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
{

  public static class Fields
  {
    public const string AccessMode = "accessmode";
    public const string Address1_AddressId = "address1_addressid";
    public const string Address1_AddressTypeCode = "address1_addresstypecode";
    public const string Address1_City = "address1_city";
    public const string Address1_Composite = "address1_composite";
    public const string Address1_Country = "address1_country";
    public const string Address1_County = "address1_county";
    public const string Address1_Fax = "address1_fax";
    public const string Address1_Latitude = "address1_latitude";
    public const string Address1_Line1 = "address1_line1";
    public const string Address1_Line2 = "address1_line2";
    public const string Address1_Line3 = "address1_line3";
    public const string Address1_Longitude = "address1_longitude";
    public const string Address1_Name = "address1_name";
    public const string Address1_PostalCode = "address1_postalcode";
    public const string Address1_PostOfficeBox = "address1_postofficebox";
    public const string Address1_ShippingMethodCode = "address1_shippingmethodcode";
    public const string Address1_StateOrProvince = "address1_stateorprovince";
    public const string Address1_Telephone1 = "address1_telephone1";
    public const string Address1_Telephone2 = "address1_telephone2";
    public const string Address1_Telephone3 = "address1_telephone3";
    public const string Address1_UPSZone = "address1_upszone";
    public const string Address1_UTCOffset = "address1_utcoffset";
    public const string Address2_AddressId = "address2_addressid";
    public const string Address2_AddressTypeCode = "address2_addresstypecode";
    public const string Address2_City = "address2_city";
    public const string Address2_Composite = "address2_composite";
    public const string Address2_Country = "address2_country";
    public const string Address2_County = "address2_county";
    public const string Address2_Fax = "address2_fax";
    public const string Address2_Latitude = "address2_latitude";
    public const string Address2_Line1 = "address2_line1";
    public const string Address2_Line2 = "address2_line2";
    public const string Address2_Line3 = "address2_line3";
    public const string Address2_Longitude = "address2_longitude";
    public const string Address2_Name = "address2_name";
    public const string Address2_PostalCode = "address2_postalcode";
    public const string Address2_PostOfficeBox = "address2_postofficebox";
    public const string Address2_ShippingMethodCode = "address2_shippingmethodcode";
    public const string Address2_StateOrProvince = "address2_stateorprovince";
    public const string Address2_Telephone1 = "address2_telephone1";
    public const string Address2_Telephone2 = "address2_telephone2";
    public const string Address2_Telephone3 = "address2_telephone3";
    public const string Address2_UPSZone = "address2_upszone";
    public const string Address2_UTCOffset = "address2_utcoffset";
    public const string ApplicationId = "applicationid";
    public const string ApplicationIdUri = "applicationiduri";
    public const string AzureActiveDirectoryObjectId = "azureactivedirectoryobjectid";
    public const string bes_NewBusinessSUDCRNLimit = "bes_newbusinesssudcrnlimit";
    public const string bes_newbusinesssudcrnlimit_Base = "bes_newbusinesssudcrnlimit_base";
    public const string bes_NewBusinessSUDINVLimit = "bes_newbusinesssudinvlimit";
    public const string bes_newbusinesssudinvlimit_Base = "bes_newbusinesssudinvlimit_base";
    public const string bes_RenewalSUDCRNLimit = "bes_renewalsudcrnlimit";
    public const string bes_renewalsudcrnlimit_Base = "bes_renewalsudcrnlimit_base";
    public const string bes_RenewalSUDINVLimit = "bes_renewalsudinvlimit";
    public const string bes_renewalsudinvlimit_Base = "bes_renewalsudinvlimit_base";
    public const string BusinessUnitId = "businessunitid";
    public const string CalendarId = "calendarid";
    public const string CALType = "caltype";
    public const string CreatedBy = "createdby";
    public const string CreatedOn = "createdon";
    public const string CreatedOnBehalfBy = "createdonbehalfby";
    public const string DefaultFiltersPopulated = "defaultfilterspopulated";
    public const string DefaultMailbox = "defaultmailbox";
    public const string DefaultOdbFolderName = "defaultodbfoldername";
    public const string DisabledReason = "disabledreason";
    public const string DisplayInServiceViews = "displayinserviceviews";
    public const string DomainName = "domainname";
    public const string EmailRouterAccessApproval = "emailrouteraccessapproval";
    public const string EmployeeId = "employeeid";
    public const string EntityImage = "entityimage";
    public const string EntityImage_Timestamp = "entityimage_timestamp";
    public const string EntityImage_URL = "entityimage_url";
    public const string EntityImageId = "entityimageid";
    public const string ExchangeRate = "exchangerate";
    public const string FirstName = "firstname";
    public const string FullName = "fullname";
    public const string GovernmentId = "governmentid";
    public const string HomePhone = "homephone";
    public const string IdentityId = "identityid";
    public const string ImportSequenceNumber = "importsequencenumber";
    public const string IncomingEmailDeliveryMethod = "incomingemaildeliverymethod";
    public const string InternalEMailAddress = "internalemailaddress";
    public const string InviteStatusCode = "invitestatuscode";
    public const string IsDisabled = "isdisabled";
    public const string IsEmailAddressApprovedByO365Admin = "isemailaddressapprovedbyo365admin";
    public const string IsIntegrationUser = "isintegrationuser";
    public const string IsLicensed = "islicensed";
    public const string IsSyncWithDirectory = "issyncwithdirectory";
    public const string JobTitle = "jobtitle";
    public const string k3c_AllowAccountManaged = "k3c_allowaccountmanaged";
    public const string k3c_AllowAccountRelease = "k3c_allowaccountrelease";
    public const string k3c_AllowContractEfficiency = "k3c_allowcontractefficiency";
    public const string k3c_authorisedcontractreviewer = "k3c_authorisedcontractreviewer";
    public const string k3c_ERPCompanyId = "k3c_erpcompanyid";
    public const string k3c_MTACRNLimit = "k3c_mtacrnlimit";
    public const string k3c_mtacrnlimit_Base = "k3c_mtacrnlimit_base";
    public const string k3c_MTAINVLimit = "k3c_mtainvlimit";
    public const string k3c_mtainvlimit_Base = "k3c_mtainvlimit_base";
    public const string k3c_NewBusinessCRNLimit = "k3c_newbusinesscrnlimit";
    public const string k3c_newbusinesscrnlimit_Base = "k3c_newbusinesscrnlimit_base";
    public const string k3c_NewBusinessINVLimit = "k3c_newbusinessinvlimit";
    public const string k3c_newbusinessinvlimit_Base = "k3c_newbusinessinvlimit_base";
    public const string k3c_RateCardLimit = "k3c_ratecardlimit";
    public const string k3c_ratecardlimit_Base = "k3c_ratecardlimit_base";
    public const string k3c_RenewalCRNLimit = "k3c_renewalcrnlimit";
    public const string k3c_renewalcrnlimit_Base = "k3c_renewalcrnlimit_base";
    public const string k3c_RenewalINVLimit = "k3c_renewalinvlimit";
    public const string k3c_renewalinvlimit_Base = "k3c_renewalinvlimit_base";
    public const string LastName = "lastname";
    public const string MiddleName = "middlename";
    public const string MobileAlertEMail = "mobilealertemail";
    public const string MobileOfflineProfileId = "mobileofflineprofileid";
    public const string MobilePhone = "mobilephone";
    public const string ModifiedBy = "modifiedby";
    public const string ModifiedOn = "modifiedon";
    public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
    public const string msdyn_gdproptout = "msdyn_gdproptout";
    public const string NickName = "nickname";
    public const string OrganizationId = "organizationid";
    public const string OutgoingEmailDeliveryMethod = "outgoingemaildeliverymethod";
    public const string OverriddenCreatedOn = "overriddencreatedon";
    public const string ParentSystemUserId = "parentsystemuserid";
    public const string PassportHi = "passporthi";
    public const string PassportLo = "passportlo";
    public const string PersonalEMailAddress = "personalemailaddress";
    public const string PhotoUrl = "photourl";
    public const string PositionId = "positionid";
    public const string PreferredAddressCode = "preferredaddresscode";
    public const string PreferredEmailCode = "preferredemailcode";
    public const string PreferredPhoneCode = "preferredphonecode";
    public const string ProcessId = "processid";
    public const string QueueId = "queueid";
    public const string Salutation = "salutation";
    public const string SetupUser = "setupuser";
    public const string SharePointEmailAddress = "sharepointemailaddress";
    public const string SiteId = "siteid";
    public const string Skills = "skills";
    public const string StageId = "stageid";
    public const string SystemUserId = "systemuserid";
    public const string Id = "systemuserid";
    public const string TerritoryId = "territoryid";
    public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
    public const string Title = "title";
    public const string TransactionCurrencyId = "transactioncurrencyid";
    public const string TraversedPath = "traversedpath";
    public const string UserLicenseType = "userlicensetype";
    public const string UserPuid = "userpuid";
    public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
    public const string VersionNumber = "versionnumber";
    public const string WindowsLiveID = "windowsliveid";
    public const string YammerEmailAddress = "yammeremailaddress";
    public const string YammerUserId = "yammeruserid";
    public const string YomiFirstName = "yomifirstname";
    public const string YomiFullName = "yomifullname";
    public const string YomiLastName = "yomilastname";
    public const string YomiMiddleName = "yomimiddlename";
    public const string Referencinglk_systemuser_createdonbehalfby = "lk_systemuser_createdonbehalfby";
    public const string Referencinglk_systemuser_modifiedonbehalfby = "lk_systemuser_modifiedonbehalfby";
    public const string Referencinglk_systemuserbase_createdby = "lk_systemuserbase_createdby";
    public const string Referencinglk_systemuserbase_modifiedby = "lk_systemuserbase_modifiedby";
    public const string Referencinguser_parent_user = "user_parent_user";
  }

  /// <summary>
  /// Default Constructor.
  /// </summary>
  [System.Diagnostics.DebuggerNonUserCode()]
  public SystemUser() :
      base(EntityLogicalName)
  {
  }

  public const string AlternateKeys = "azureactivedirectoryobjectid";

  public const string EntityLogicalName = "systemuser";

  public const string EntitySchemaName = "SystemUser";

  public const string PrimaryIdAttribute = "systemuserid";

  public const string PrimaryNameAttribute = "fullname";

  public const string EntityLogicalCollectionName = "systemusers";

  public const string EntitySetName = "systemusers";

  public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

  public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;

  [System.Diagnostics.DebuggerNonUserCode()]
  private void OnPropertyChanged(string propertyName)
  {
    if ((this.PropertyChanged != null))
    {
      this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
    }
  }

  [System.Diagnostics.DebuggerNonUserCode()]
  private void OnPropertyChanging(string propertyName)
  {
    if ((this.PropertyChanging != null))
    {
      this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
    }
  }

  /// <summary>
  /// Type of user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accessmode")]
  public Microsoft.Xrm.Sdk.OptionSetValue AccessMode
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("accessmode");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("AccessMode");
      this.SetAttributeValue("accessmode", value);
      this.OnPropertyChanged("AccessMode");
    }
  }

  /// <summary>
  /// Type of user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accessmode")]
  public virtual SystemUser_AccessMode? AccessModeEnum
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return ((SystemUser_AccessMode?)(EntityOptionSetEnum.GetEnum(this, "accessmode")));
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("AccessMode");
      this.SetAttributeValue("accessmode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
      this.OnPropertyChanged("AccessMode");
    }
  }

  /// <summary>
  /// Unique identifier for address 1.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addressid")]
  public System.Nullable<System.Guid> Address1_AddressId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("address1_addressid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_AddressId");
      this.SetAttributeValue("address1_addressid", value);
      this.OnPropertyChanged("Address1_AddressId");
    }
  }

  /// <summary>
  /// Type of address for address 1, such as billing, shipping, or primary address.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addresstypecode")]
  public Microsoft.Xrm.Sdk.OptionSetValue Address1_AddressTypeCode
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address1_addresstypecode");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_AddressTypeCode");
      this.SetAttributeValue("address1_addresstypecode", value);
      this.OnPropertyChanged("Address1_AddressTypeCode");
    }
  }

  /// <summary>
  /// Type of address for address 1, such as billing, shipping, or primary address.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addresstypecode")]
  public virtual SystemUser_Address1_AddressTypeCode? Address1_AddressTypeCodeEnum
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return ((SystemUser_Address1_AddressTypeCode?)(EntityOptionSetEnum.GetEnum(this, "address1_addresstypecode")));
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_AddressTypeCode");
      this.SetAttributeValue("address1_addresstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
      this.OnPropertyChanged("Address1_AddressTypeCode");
    }
  }

  /// <summary>
  /// City name for address 1.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_city")]
  public string Address1_City
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address1_city");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_City");
      this.SetAttributeValue("address1_city", value);
      this.OnPropertyChanged("Address1_City");
    }
  }

  /// <summary>
  /// Shows the complete primary address.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_composite")]
  public string Address1_Composite
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address1_composite");
    }
  }

  /// <summary>
  /// Country/region name in address 1.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_country")]
  public string Address1_Country
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address1_country");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_Country");
      this.SetAttributeValue("address1_country", value);
      this.OnPropertyChanged("Address1_Country");
    }
  }

  /// <summary>
  /// County name for address 1.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_county")]
  public string Address1_County
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address1_county");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_County");
      this.SetAttributeValue("address1_county", value);
      this.OnPropertyChanged("Address1_County");
    }
  }

  /// <summary>
  /// Fax number for address 1.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_fax")]
  public string Address1_Fax
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address1_fax");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_Fax");
      this.SetAttributeValue("address1_fax", value);
      this.OnPropertyChanged("Address1_Fax");
    }
  }

  /// <summary>
  /// Latitude for address 1.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_latitude")]
  public System.Nullable<double> Address1_Latitude
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<double>>("address1_latitude");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_Latitude");
      this.SetAttributeValue("address1_latitude", value);
      this.OnPropertyChanged("Address1_Latitude");
    }
  }

  /// <summary>
  /// First line for entering address 1 information.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line1")]
  public string Address1_Line1
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address1_line1");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_Line1");
      this.SetAttributeValue("address1_line1", value);
      this.OnPropertyChanged("Address1_Line1");
    }
  }

  /// <summary>
  /// Second line for entering address 1 information.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line2")]
  public string Address1_Line2
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address1_line2");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_Line2");
      this.SetAttributeValue("address1_line2", value);
      this.OnPropertyChanged("Address1_Line2");
    }
  }

  /// <summary>
  /// Third line for entering address 1 information.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line3")]
  public string Address1_Line3
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address1_line3");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_Line3");
      this.SetAttributeValue("address1_line3", value);
      this.OnPropertyChanged("Address1_Line3");
    }
  }

  /// <summary>
  /// Longitude for address 1.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_longitude")]
  public System.Nullable<double> Address1_Longitude
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<double>>("address1_longitude");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_Longitude");
      this.SetAttributeValue("address1_longitude", value);
      this.OnPropertyChanged("Address1_Longitude");
    }
  }

  /// <summary>
  /// Name to enter for address 1.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_name")]
  public string Address1_Name
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address1_name");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_Name");
      this.SetAttributeValue("address1_name", value);
      this.OnPropertyChanged("Address1_Name");
    }
  }

  /// <summary>
  /// ZIP Code or postal code for address 1.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_postalcode")]
  public string Address1_PostalCode
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address1_postalcode");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_PostalCode");
      this.SetAttributeValue("address1_postalcode", value);
      this.OnPropertyChanged("Address1_PostalCode");
    }
  }

  /// <summary>
  /// Post office box number for address 1.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_postofficebox")]
  public string Address1_PostOfficeBox
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address1_postofficebox");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_PostOfficeBox");
      this.SetAttributeValue("address1_postofficebox", value);
      this.OnPropertyChanged("Address1_PostOfficeBox");
    }
  }

  /// <summary>
  /// Method of shipment for address 1.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_shippingmethodcode")]
  public Microsoft.Xrm.Sdk.OptionSetValue Address1_ShippingMethodCode
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address1_shippingmethodcode");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_ShippingMethodCode");
      this.SetAttributeValue("address1_shippingmethodcode", value);
      this.OnPropertyChanged("Address1_ShippingMethodCode");
    }
  }

  /// <summary>
  /// Method of shipment for address 1.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_shippingmethodcode")]
  public virtual SystemUser_Address1_ShippingMethodCode? Address1_ShippingMethodCodeEnum
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return ((SystemUser_Address1_ShippingMethodCode?)(EntityOptionSetEnum.GetEnum(this, "address1_shippingmethodcode")));
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_ShippingMethodCode");
      this.SetAttributeValue("address1_shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
      this.OnPropertyChanged("Address1_ShippingMethodCode");
    }
  }

  /// <summary>
  /// State or province for address 1.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_stateorprovince")]
  public string Address1_StateOrProvince
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address1_stateorprovince");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_StateOrProvince");
      this.SetAttributeValue("address1_stateorprovince", value);
      this.OnPropertyChanged("Address1_StateOrProvince");
    }
  }

  /// <summary>
  /// First telephone number associated with address 1.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone1")]
  public string Address1_Telephone1
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address1_telephone1");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_Telephone1");
      this.SetAttributeValue("address1_telephone1", value);
      this.OnPropertyChanged("Address1_Telephone1");
    }
  }

  /// <summary>
  /// Second telephone number associated with address 1.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone2")]
  public string Address1_Telephone2
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address1_telephone2");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_Telephone2");
      this.SetAttributeValue("address1_telephone2", value);
      this.OnPropertyChanged("Address1_Telephone2");
    }
  }

  /// <summary>
  /// Third telephone number associated with address 1.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone3")]
  public string Address1_Telephone3
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address1_telephone3");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_Telephone3");
      this.SetAttributeValue("address1_telephone3", value);
      this.OnPropertyChanged("Address1_Telephone3");
    }
  }

  /// <summary>
  /// United Parcel Service (UPS) zone for address 1.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_upszone")]
  public string Address1_UPSZone
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address1_upszone");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_UPSZone");
      this.SetAttributeValue("address1_upszone", value);
      this.OnPropertyChanged("Address1_UPSZone");
    }
  }

  /// <summary>
  /// UTC offset for address 1. This is the difference between local time and standard Coordinated Universal Time.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_utcoffset")]
  public System.Nullable<int> Address1_UTCOffset
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<int>>("address1_utcoffset");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address1_UTCOffset");
      this.SetAttributeValue("address1_utcoffset", value);
      this.OnPropertyChanged("Address1_UTCOffset");
    }
  }

  /// <summary>
  /// Unique identifier for address 2.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addressid")]
  public System.Nullable<System.Guid> Address2_AddressId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("address2_addressid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_AddressId");
      this.SetAttributeValue("address2_addressid", value);
      this.OnPropertyChanged("Address2_AddressId");
    }
  }

  /// <summary>
  /// Type of address for address 2, such as billing, shipping, or primary address.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addresstypecode")]
  public Microsoft.Xrm.Sdk.OptionSetValue Address2_AddressTypeCode
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address2_addresstypecode");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_AddressTypeCode");
      this.SetAttributeValue("address2_addresstypecode", value);
      this.OnPropertyChanged("Address2_AddressTypeCode");
    }
  }

  /// <summary>
  /// Type of address for address 2, such as billing, shipping, or primary address.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addresstypecode")]
  public virtual SystemUser_Address2_AddressTypeCode? Address2_AddressTypeCodeEnum
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return ((SystemUser_Address2_AddressTypeCode?)(EntityOptionSetEnum.GetEnum(this, "address2_addresstypecode")));
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_AddressTypeCode");
      this.SetAttributeValue("address2_addresstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
      this.OnPropertyChanged("Address2_AddressTypeCode");
    }
  }

  /// <summary>
  /// City name for address 2.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_city")]
  public string Address2_City
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address2_city");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_City");
      this.SetAttributeValue("address2_city", value);
      this.OnPropertyChanged("Address2_City");
    }
  }

  /// <summary>
  /// Shows the complete secondary address.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_composite")]
  public string Address2_Composite
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address2_composite");
    }
  }

  /// <summary>
  /// Country/region name in address 2.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_country")]
  public string Address2_Country
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address2_country");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_Country");
      this.SetAttributeValue("address2_country", value);
      this.OnPropertyChanged("Address2_Country");
    }
  }

  /// <summary>
  /// County name for address 2.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_county")]
  public string Address2_County
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address2_county");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_County");
      this.SetAttributeValue("address2_county", value);
      this.OnPropertyChanged("Address2_County");
    }
  }

  /// <summary>
  /// Fax number for address 2.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_fax")]
  public string Address2_Fax
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address2_fax");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_Fax");
      this.SetAttributeValue("address2_fax", value);
      this.OnPropertyChanged("Address2_Fax");
    }
  }

  /// <summary>
  /// Latitude for address 2.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_latitude")]
  public System.Nullable<double> Address2_Latitude
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<double>>("address2_latitude");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_Latitude");
      this.SetAttributeValue("address2_latitude", value);
      this.OnPropertyChanged("Address2_Latitude");
    }
  }

  /// <summary>
  /// First line for entering address 2 information.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line1")]
  public string Address2_Line1
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address2_line1");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_Line1");
      this.SetAttributeValue("address2_line1", value);
      this.OnPropertyChanged("Address2_Line1");
    }
  }

  /// <summary>
  /// Second line for entering address 2 information.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line2")]
  public string Address2_Line2
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address2_line2");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_Line2");
      this.SetAttributeValue("address2_line2", value);
      this.OnPropertyChanged("Address2_Line2");
    }
  }

  /// <summary>
  /// Third line for entering address 2 information.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line3")]
  public string Address2_Line3
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address2_line3");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_Line3");
      this.SetAttributeValue("address2_line3", value);
      this.OnPropertyChanged("Address2_Line3");
    }
  }

  /// <summary>
  /// Longitude for address 2.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_longitude")]
  public System.Nullable<double> Address2_Longitude
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<double>>("address2_longitude");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_Longitude");
      this.SetAttributeValue("address2_longitude", value);
      this.OnPropertyChanged("Address2_Longitude");
    }
  }

  /// <summary>
  /// Name to enter for address 2.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_name")]
  public string Address2_Name
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address2_name");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_Name");
      this.SetAttributeValue("address2_name", value);
      this.OnPropertyChanged("Address2_Name");
    }
  }

  /// <summary>
  /// ZIP Code or postal code for address 2.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_postalcode")]
  public string Address2_PostalCode
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address2_postalcode");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_PostalCode");
      this.SetAttributeValue("address2_postalcode", value);
      this.OnPropertyChanged("Address2_PostalCode");
    }
  }

  /// <summary>
  /// Post office box number for address 2.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_postofficebox")]
  public string Address2_PostOfficeBox
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address2_postofficebox");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_PostOfficeBox");
      this.SetAttributeValue("address2_postofficebox", value);
      this.OnPropertyChanged("Address2_PostOfficeBox");
    }
  }

  /// <summary>
  /// Method of shipment for address 2.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_shippingmethodcode")]
  public Microsoft.Xrm.Sdk.OptionSetValue Address2_ShippingMethodCode
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address2_shippingmethodcode");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_ShippingMethodCode");
      this.SetAttributeValue("address2_shippingmethodcode", value);
      this.OnPropertyChanged("Address2_ShippingMethodCode");
    }
  }

  /// <summary>
  /// Method of shipment for address 2.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_shippingmethodcode")]
  public virtual SystemUser_Address2_ShippingMethodCode? Address2_ShippingMethodCodeEnum
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return ((SystemUser_Address2_ShippingMethodCode?)(EntityOptionSetEnum.GetEnum(this, "address2_shippingmethodcode")));
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_ShippingMethodCode");
      this.SetAttributeValue("address2_shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
      this.OnPropertyChanged("Address2_ShippingMethodCode");
    }
  }

  /// <summary>
  /// State or province for address 2.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_stateorprovince")]
  public string Address2_StateOrProvince
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address2_stateorprovince");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_StateOrProvince");
      this.SetAttributeValue("address2_stateorprovince", value);
      this.OnPropertyChanged("Address2_StateOrProvince");
    }
  }

  /// <summary>
  /// First telephone number associated with address 2.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone1")]
  public string Address2_Telephone1
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address2_telephone1");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_Telephone1");
      this.SetAttributeValue("address2_telephone1", value);
      this.OnPropertyChanged("Address2_Telephone1");
    }
  }

  /// <summary>
  /// Second telephone number associated with address 2.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone2")]
  public string Address2_Telephone2
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address2_telephone2");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_Telephone2");
      this.SetAttributeValue("address2_telephone2", value);
      this.OnPropertyChanged("Address2_Telephone2");
    }
  }

  /// <summary>
  /// Third telephone number associated with address 2.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone3")]
  public string Address2_Telephone3
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address2_telephone3");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_Telephone3");
      this.SetAttributeValue("address2_telephone3", value);
      this.OnPropertyChanged("Address2_Telephone3");
    }
  }

  /// <summary>
  /// United Parcel Service (UPS) zone for address 2.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_upszone")]
  public string Address2_UPSZone
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("address2_upszone");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_UPSZone");
      this.SetAttributeValue("address2_upszone", value);
      this.OnPropertyChanged("Address2_UPSZone");
    }
  }

  /// <summary>
  /// UTC offset for address 2. This is the difference between local time and standard Coordinated Universal Time.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_utcoffset")]
  public System.Nullable<int> Address2_UTCOffset
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<int>>("address2_utcoffset");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Address2_UTCOffset");
      this.SetAttributeValue("address2_utcoffset", value);
      this.OnPropertyChanged("Address2_UTCOffset");
    }
  }

  /// <summary>
  /// The identifier for the application. This is used to access data in another application.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("applicationid")]
  public System.Nullable<System.Guid> ApplicationId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("applicationid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("ApplicationId");
      this.SetAttributeValue("applicationid", value);
      this.OnPropertyChanged("ApplicationId");
    }
  }

  /// <summary>
  /// The URI used as a unique logical identifier for the external app. This can be used to validate the application.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("applicationiduri")]
  public string ApplicationIdUri
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("applicationiduri");
    }
  }

  /// <summary>
  /// This is the application directory object Id.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("azureactivedirectoryobjectid")]
  public System.Nullable<System.Guid> AzureActiveDirectoryObjectId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("azureactivedirectoryobjectid");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bes_newbusinesssudcrnlimit")]
  public Microsoft.Xrm.Sdk.Money bes_NewBusinessSUDCRNLimit
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("bes_newbusinesssudcrnlimit");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("bes_NewBusinessSUDCRNLimit");
      this.SetAttributeValue("bes_newbusinesssudcrnlimit", value);
      this.OnPropertyChanged("bes_NewBusinessSUDCRNLimit");
    }
  }

  /// <summary>
  /// Value of the New Business SUD CRN Limit in base currency.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bes_newbusinesssudcrnlimit_base")]
  public Microsoft.Xrm.Sdk.Money bes_newbusinesssudcrnlimit_Base
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("bes_newbusinesssudcrnlimit_base");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bes_newbusinesssudinvlimit")]
  public Microsoft.Xrm.Sdk.Money bes_NewBusinessSUDINVLimit
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("bes_newbusinesssudinvlimit");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("bes_NewBusinessSUDINVLimit");
      this.SetAttributeValue("bes_newbusinesssudinvlimit", value);
      this.OnPropertyChanged("bes_NewBusinessSUDINVLimit");
    }
  }

  /// <summary>
  /// Value of the New Business SUD INV Limit in base currency.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bes_newbusinesssudinvlimit_base")]
  public Microsoft.Xrm.Sdk.Money bes_newbusinesssudinvlimit_Base
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("bes_newbusinesssudinvlimit_base");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bes_renewalsudcrnlimit")]
  public Microsoft.Xrm.Sdk.Money bes_RenewalSUDCRNLimit
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("bes_renewalsudcrnlimit");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("bes_RenewalSUDCRNLimit");
      this.SetAttributeValue("bes_renewalsudcrnlimit", value);
      this.OnPropertyChanged("bes_RenewalSUDCRNLimit");
    }
  }

  /// <summary>
  /// Value of the Renewal SUD CRN Limit in base currency.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bes_renewalsudcrnlimit_base")]
  public Microsoft.Xrm.Sdk.Money bes_renewalsudcrnlimit_Base
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("bes_renewalsudcrnlimit_base");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bes_renewalsudinvlimit")]
  public Microsoft.Xrm.Sdk.Money bes_RenewalSUDINVLimit
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("bes_renewalsudinvlimit");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("bes_RenewalSUDINVLimit");
      this.SetAttributeValue("bes_renewalsudinvlimit", value);
      this.OnPropertyChanged("bes_RenewalSUDINVLimit");
    }
  }

  /// <summary>
  /// Value of the Renewal SUD INV Limit in base currency.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bes_renewalsudinvlimit_base")]
  public Microsoft.Xrm.Sdk.Money bes_renewalsudinvlimit_Base
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("bes_renewalsudinvlimit_base");
    }
  }

  /// <summary>
  /// Unique identifier of the business unit with which the user is associated.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitid")]
  public Microsoft.Xrm.Sdk.EntityReference BusinessUnitId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("businessunitid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("BusinessUnitId");
      this.SetAttributeValue("businessunitid", value);
      this.OnPropertyChanged("BusinessUnitId");
    }
  }

  /// <summary>
  /// Fiscal calendar associated with the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("calendarid")]
  public Microsoft.Xrm.Sdk.EntityReference CalendarId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("calendarid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("CalendarId");
      this.SetAttributeValue("calendarid", value);
      this.OnPropertyChanged("CalendarId");
    }
  }

  /// <summary>
  /// License type of user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("caltype")]
  public Microsoft.Xrm.Sdk.OptionSetValue CALType
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("caltype");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("CALType");
      this.SetAttributeValue("caltype", value);
      this.OnPropertyChanged("CALType");
    }
  }

  /// <summary>
  /// License type of user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("caltype")]
  public virtual SystemUser_CALType? CALTypeEnum
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return ((SystemUser_CALType?)(EntityOptionSetEnum.GetEnum(this, "caltype")));
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("CALType");
      this.SetAttributeValue("caltype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
      this.OnPropertyChanged("CALType");
    }
  }

  /// <summary>
  /// Unique identifier of the user who created the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
  public Microsoft.Xrm.Sdk.EntityReference CreatedBy
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
    }
  }

  /// <summary>
  /// Date and time when the user was created.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
  public System.Nullable<System.DateTime> CreatedOn
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
    }
  }

  /// <summary>
  /// Unique identifier of the delegate user who created the systemuser.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
  public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("CreatedOnBehalfBy");
      this.SetAttributeValue("createdonbehalfby", value);
      this.OnPropertyChanged("CreatedOnBehalfBy");
    }
  }

  /// <summary>
  /// Indicates if default outlook filters have been populated.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultfilterspopulated")]
  public System.Nullable<bool> DefaultFiltersPopulated
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<bool>>("defaultfilterspopulated");
    }
  }

  /// <summary>
  /// Select the mailbox associated with this user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultmailbox")]
  public Microsoft.Xrm.Sdk.EntityReference DefaultMailbox
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("defaultmailbox");
    }
  }

  /// <summary>
  /// Type a default folder name for the user's OneDrive For Business location.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultodbfoldername")]
  public string DefaultOdbFolderName
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("defaultodbfoldername");
    }
  }

  /// <summary>
  /// Reason for disabling the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("disabledreason")]
  public string DisabledReason
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("disabledreason");
    }
  }

  /// <summary>
  /// Whether to display the user in service views.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("displayinserviceviews")]
  public System.Nullable<bool> DisplayInServiceViews
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<bool>>("displayinserviceviews");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("DisplayInServiceViews");
      this.SetAttributeValue("displayinserviceviews", value);
      this.OnPropertyChanged("DisplayInServiceViews");
    }
  }

  /// <summary>
  /// Active Directory domain of which the user is a member.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("domainname")]
  public string DomainName
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("domainname");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("DomainName");
      this.SetAttributeValue("domainname", value);
      this.OnPropertyChanged("DomainName");
    }
  }

  /// <summary>
  /// Shows the status of the primary email address.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailrouteraccessapproval")]
  public Microsoft.Xrm.Sdk.OptionSetValue EmailRouterAccessApproval
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("emailrouteraccessapproval");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("EmailRouterAccessApproval");
      this.SetAttributeValue("emailrouteraccessapproval", value);
      this.OnPropertyChanged("EmailRouterAccessApproval");
    }
  }

  /// <summary>
  /// Shows the status of the primary email address.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailrouteraccessapproval")]
  public virtual SystemUser_EmailRouterAccessApproval? EmailRouterAccessApprovalEnum
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return ((SystemUser_EmailRouterAccessApproval?)(EntityOptionSetEnum.GetEnum(this, "emailrouteraccessapproval")));
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("EmailRouterAccessApproval");
      this.SetAttributeValue("emailrouteraccessapproval", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
      this.OnPropertyChanged("EmailRouterAccessApproval");
    }
  }

  /// <summary>
  /// Employee identifier for the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("employeeid")]
  public string EmployeeId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("employeeid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("EmployeeId");
      this.SetAttributeValue("employeeid", value);
      this.OnPropertyChanged("EmployeeId");
    }
  }

  /// <summary>
  /// Shows the default image for the record.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
  public byte[] EntityImage
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<byte[]>("entityimage");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("EntityImage");
      this.SetAttributeValue("entityimage", value);
      this.OnPropertyChanged("EntityImage");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
  public System.Nullable<long> EntityImage_Timestamp
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
  public string EntityImage_URL
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("entityimage_url");
    }
  }

  /// <summary>
  /// For internal use only.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
  public System.Nullable<System.Guid> EntityImageId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
    }
  }

  /// <summary>
  /// Exchange rate for the currency associated with the systemuser with respect to the base currency.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
  public System.Nullable<decimal> ExchangeRate
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
    }
  }

  /// <summary>
  /// First name of the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstname")]
  public string FirstName
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("firstname");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("FirstName");
      this.SetAttributeValue("firstname", value);
      this.OnPropertyChanged("FirstName");
    }
  }

  /// <summary>
  /// Full name of the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fullname")]
  public string FullName
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("fullname");
    }
  }

  /// <summary>
  /// Government identifier for the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("governmentid")]
  public string GovernmentId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("governmentid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("GovernmentId");
      this.SetAttributeValue("governmentid", value);
      this.OnPropertyChanged("GovernmentId");
    }
  }

  /// <summary>
  /// Home phone number for the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("homephone")]
  public string HomePhone
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("homephone");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("HomePhone");
      this.SetAttributeValue("homephone", value);
      this.OnPropertyChanged("HomePhone");
    }
  }

  /// <summary>
  /// For internal use only.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("identityid")]
  public System.Nullable<int> IdentityId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<int>>("identityid");
    }
  }

  /// <summary>
  /// Unique identifier of the data import or data migration that created this record.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
  public System.Nullable<int> ImportSequenceNumber
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("ImportSequenceNumber");
      this.SetAttributeValue("importsequencenumber", value);
      this.OnPropertyChanged("ImportSequenceNumber");
    }
  }

  /// <summary>
  /// Incoming email delivery method for the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingemaildeliverymethod")]
  public Microsoft.Xrm.Sdk.OptionSetValue IncomingEmailDeliveryMethod
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("incomingemaildeliverymethod");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("IncomingEmailDeliveryMethod");
      this.SetAttributeValue("incomingemaildeliverymethod", value);
      this.OnPropertyChanged("IncomingEmailDeliveryMethod");
    }
  }

  /// <summary>
  /// Incoming email delivery method for the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingemaildeliverymethod")]
  public virtual SystemUser_IncomingEmailDeliveryMethod? IncomingEmailDeliveryMethodEnum
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return ((SystemUser_IncomingEmailDeliveryMethod?)(EntityOptionSetEnum.GetEnum(this, "incomingemaildeliverymethod")));
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("IncomingEmailDeliveryMethod");
      this.SetAttributeValue("incomingemaildeliverymethod", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
      this.OnPropertyChanged("IncomingEmailDeliveryMethod");
    }
  }

  /// <summary>
  /// Internal email address for the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("internalemailaddress")]
  public string InternalEMailAddress
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("internalemailaddress");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("InternalEMailAddress");
      this.SetAttributeValue("internalemailaddress", value);
      this.OnPropertyChanged("InternalEMailAddress");
    }
  }

  /// <summary>
  /// User invitation status.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("invitestatuscode")]
  public Microsoft.Xrm.Sdk.OptionSetValue InviteStatusCode
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("invitestatuscode");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("InviteStatusCode");
      this.SetAttributeValue("invitestatuscode", value);
      this.OnPropertyChanged("InviteStatusCode");
    }
  }

  /// <summary>
  /// User invitation status.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("invitestatuscode")]
  public virtual SystemUser_InviteStatusCode? InviteStatusCodeEnum
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return ((SystemUser_InviteStatusCode?)(EntityOptionSetEnum.GetEnum(this, "invitestatuscode")));
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("InviteStatusCode");
      this.SetAttributeValue("invitestatuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
      this.OnPropertyChanged("InviteStatusCode");
    }
  }

  /// <summary>
  /// Information about whether the user is enabled.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdisabled")]
  public System.Nullable<bool> IsDisabled
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<bool>>("isdisabled");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("IsDisabled");
      this.SetAttributeValue("isdisabled", value);
      this.OnPropertyChanged("IsDisabled");
    }
  }

  /// <summary>
  /// Shows the status of approval of the email address by O365 Admin.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isemailaddressapprovedbyo365admin")]
  public System.Nullable<bool> IsEmailAddressApprovedByO365Admin
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<bool>>("isemailaddressapprovedbyo365admin");
    }
  }

  /// <summary>
  /// Check if user is an integration user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isintegrationuser")]
  public System.Nullable<bool> IsIntegrationUser
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<bool>>("isintegrationuser");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("IsIntegrationUser");
      this.SetAttributeValue("isintegrationuser", value);
      this.OnPropertyChanged("IsIntegrationUser");
    }
  }

  /// <summary>
  /// Information about whether the user is licensed.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("islicensed")]
  public System.Nullable<bool> IsLicensed
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<bool>>("islicensed");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("IsLicensed");
      this.SetAttributeValue("islicensed", value);
      this.OnPropertyChanged("IsLicensed");
    }
  }

  /// <summary>
  /// Information about whether the user is synced with the directory.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("issyncwithdirectory")]
  public System.Nullable<bool> IsSyncWithDirectory
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<bool>>("issyncwithdirectory");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("IsSyncWithDirectory");
      this.SetAttributeValue("issyncwithdirectory", value);
      this.OnPropertyChanged("IsSyncWithDirectory");
    }
  }

  /// <summary>
  /// Job title of the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("jobtitle")]
  public string JobTitle
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("jobtitle");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("JobTitle");
      this.SetAttributeValue("jobtitle", value);
      this.OnPropertyChanged("JobTitle");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("k3c_allowaccountmanaged")]
  public System.Nullable<bool> k3c_AllowAccountManaged
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<bool>>("k3c_allowaccountmanaged");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("k3c_AllowAccountManaged");
      this.SetAttributeValue("k3c_allowaccountmanaged", value);
      this.OnPropertyChanged("k3c_AllowAccountManaged");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("k3c_allowaccountrelease")]
  public System.Nullable<bool> k3c_AllowAccountRelease
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<bool>>("k3c_allowaccountrelease");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("k3c_AllowAccountRelease");
      this.SetAttributeValue("k3c_allowaccountrelease", value);
      this.OnPropertyChanged("k3c_AllowAccountRelease");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("k3c_allowcontractefficiency")]
  public System.Nullable<bool> k3c_AllowContractEfficiency
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<bool>>("k3c_allowcontractefficiency");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("k3c_AllowContractEfficiency");
      this.SetAttributeValue("k3c_allowcontractefficiency", value);
      this.OnPropertyChanged("k3c_AllowContractEfficiency");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("k3c_authorisedcontractreviewer")]
  public System.Nullable<bool> k3c_authorisedcontractreviewer
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<bool>>("k3c_authorisedcontractreviewer");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("k3c_authorisedcontractreviewer");
      this.SetAttributeValue("k3c_authorisedcontractreviewer", value);
      this.OnPropertyChanged("k3c_authorisedcontractreviewer");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("k3c_erpcompanyid")]
  public Microsoft.Xrm.Sdk.EntityReference k3c_ERPCompanyId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("k3c_erpcompanyid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("k3c_ERPCompanyId");
      this.SetAttributeValue("k3c_erpcompanyid", value);
      this.OnPropertyChanged("k3c_ERPCompanyId");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("k3c_mtacrnlimit")]
  public Microsoft.Xrm.Sdk.Money k3c_MTACRNLimit
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("k3c_mtacrnlimit");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("k3c_MTACRNLimit");
      this.SetAttributeValue("k3c_mtacrnlimit", value);
      this.OnPropertyChanged("k3c_MTACRNLimit");
    }
  }

  /// <summary>
  /// Value of the MTA CRN Limit in base currency.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("k3c_mtacrnlimit_base")]
  public Microsoft.Xrm.Sdk.Money k3c_mtacrnlimit_Base
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("k3c_mtacrnlimit_base");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("k3c_mtainvlimit")]
  public Microsoft.Xrm.Sdk.Money k3c_MTAINVLimit
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("k3c_mtainvlimit");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("k3c_MTAINVLimit");
      this.SetAttributeValue("k3c_mtainvlimit", value);
      this.OnPropertyChanged("k3c_MTAINVLimit");
    }
  }

  /// <summary>
  /// Value of the MTA INV Limit in base currency.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("k3c_mtainvlimit_base")]
  public Microsoft.Xrm.Sdk.Money k3c_mtainvlimit_Base
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("k3c_mtainvlimit_base");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("k3c_newbusinesscrnlimit")]
  public Microsoft.Xrm.Sdk.Money k3c_NewBusinessCRNLimit
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("k3c_newbusinesscrnlimit");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("k3c_NewBusinessCRNLimit");
      this.SetAttributeValue("k3c_newbusinesscrnlimit", value);
      this.OnPropertyChanged("k3c_NewBusinessCRNLimit");
    }
  }

  /// <summary>
  /// Value of the New Business CRN Limit in base currency.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("k3c_newbusinesscrnlimit_base")]
  public Microsoft.Xrm.Sdk.Money k3c_newbusinesscrnlimit_Base
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("k3c_newbusinesscrnlimit_base");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("k3c_newbusinessinvlimit")]
  public Microsoft.Xrm.Sdk.Money k3c_NewBusinessINVLimit
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("k3c_newbusinessinvlimit");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("k3c_NewBusinessINVLimit");
      this.SetAttributeValue("k3c_newbusinessinvlimit", value);
      this.OnPropertyChanged("k3c_NewBusinessINVLimit");
    }
  }

  /// <summary>
  /// Value of the New Business INV Limit in base currency.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("k3c_newbusinessinvlimit_base")]
  public Microsoft.Xrm.Sdk.Money k3c_newbusinessinvlimit_Base
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("k3c_newbusinessinvlimit_base");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("k3c_ratecardlimit")]
  public Microsoft.Xrm.Sdk.Money k3c_RateCardLimit
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("k3c_ratecardlimit");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("k3c_RateCardLimit");
      this.SetAttributeValue("k3c_ratecardlimit", value);
      this.OnPropertyChanged("k3c_RateCardLimit");
    }
  }

  /// <summary>
  /// Value of the Rate Card Limit in base currency.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("k3c_ratecardlimit_base")]
  public Microsoft.Xrm.Sdk.Money k3c_ratecardlimit_Base
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("k3c_ratecardlimit_base");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("k3c_renewalcrnlimit")]
  public Microsoft.Xrm.Sdk.Money k3c_RenewalCRNLimit
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("k3c_renewalcrnlimit");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("k3c_RenewalCRNLimit");
      this.SetAttributeValue("k3c_renewalcrnlimit", value);
      this.OnPropertyChanged("k3c_RenewalCRNLimit");
    }
  }

  /// <summary>
  /// Value of the Renewal CRN Limit in base currency.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("k3c_renewalcrnlimit_base")]
  public Microsoft.Xrm.Sdk.Money k3c_renewalcrnlimit_Base
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("k3c_renewalcrnlimit_base");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("k3c_renewalinvlimit")]
  public Microsoft.Xrm.Sdk.Money k3c_RenewalINVLimit
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("k3c_renewalinvlimit");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("k3c_RenewalINVLimit");
      this.SetAttributeValue("k3c_renewalinvlimit", value);
      this.OnPropertyChanged("k3c_RenewalINVLimit");
    }
  }

  /// <summary>
  /// Value of the Renewal INV Limit in base currency.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("k3c_renewalinvlimit_base")]
  public Microsoft.Xrm.Sdk.Money k3c_renewalinvlimit_Base
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("k3c_renewalinvlimit_base");
    }
  }

  /// <summary>
  /// Last name of the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastname")]
  public string LastName
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("lastname");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("LastName");
      this.SetAttributeValue("lastname", value);
      this.OnPropertyChanged("LastName");
    }
  }

  /// <summary>
  /// Middle name of the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("middlename")]
  public string MiddleName
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("middlename");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("MiddleName");
      this.SetAttributeValue("middlename", value);
      this.OnPropertyChanged("MiddleName");
    }
  }

  /// <summary>
  /// Mobile alert email address for the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mobilealertemail")]
  public string MobileAlertEMail
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("mobilealertemail");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("MobileAlertEMail");
      this.SetAttributeValue("mobilealertemail", value);
      this.OnPropertyChanged("MobileAlertEMail");
    }
  }

  /// <summary>
  /// Items contained with a particular SystemUser.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mobileofflineprofileid")]
  public Microsoft.Xrm.Sdk.EntityReference MobileOfflineProfileId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("mobileofflineprofileid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("MobileOfflineProfileId");
      this.SetAttributeValue("mobileofflineprofileid", value);
      this.OnPropertyChanged("MobileOfflineProfileId");
    }
  }

  /// <summary>
  /// Mobile phone number for the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mobilephone")]
  public string MobilePhone
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("mobilephone");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("MobilePhone");
      this.SetAttributeValue("mobilephone", value);
      this.OnPropertyChanged("MobilePhone");
    }
  }

  /// <summary>
  /// Unique identifier of the user who last modified the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
  public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
    }
  }

  /// <summary>
  /// Date and time when the user was last modified.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
  public System.Nullable<System.DateTime> ModifiedOn
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
    }
  }

  /// <summary>
  /// Unique identifier of the delegate user who last modified the systemuser.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
  public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("ModifiedOnBehalfBy");
      this.SetAttributeValue("modifiedonbehalfby", value);
      this.OnPropertyChanged("ModifiedOnBehalfBy");
    }
  }

  /// <summary>
  /// Describes whether user is opted out or not
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_gdproptout")]
  public System.Nullable<bool> msdyn_gdproptout
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<bool>>("msdyn_gdproptout");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("msdyn_gdproptout");
      this.SetAttributeValue("msdyn_gdproptout", value);
      this.OnPropertyChanged("msdyn_gdproptout");
    }
  }

  /// <summary>
  /// Nickname of the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("nickname")]
  public string NickName
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("nickname");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("NickName");
      this.SetAttributeValue("nickname", value);
      this.OnPropertyChanged("NickName");
    }
  }

  /// <summary>
  /// Unique identifier of the organization associated with the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
  public System.Nullable<System.Guid> OrganizationId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("organizationid");
    }
  }

  /// <summary>
  /// Outgoing email delivery method for the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingemaildeliverymethod")]
  public Microsoft.Xrm.Sdk.OptionSetValue OutgoingEmailDeliveryMethod
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("outgoingemaildeliverymethod");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("OutgoingEmailDeliveryMethod");
      this.SetAttributeValue("outgoingemaildeliverymethod", value);
      this.OnPropertyChanged("OutgoingEmailDeliveryMethod");
    }
  }

  /// <summary>
  /// Outgoing email delivery method for the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingemaildeliverymethod")]
  public virtual SystemUser_OutgoingEmailDeliveryMethod? OutgoingEmailDeliveryMethodEnum
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return ((SystemUser_OutgoingEmailDeliveryMethod?)(EntityOptionSetEnum.GetEnum(this, "outgoingemaildeliverymethod")));
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("OutgoingEmailDeliveryMethod");
      this.SetAttributeValue("outgoingemaildeliverymethod", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
      this.OnPropertyChanged("OutgoingEmailDeliveryMethod");
    }
  }

  /// <summary>
  /// Date and time that the record was migrated.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
  public System.Nullable<System.DateTime> OverriddenCreatedOn
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("OverriddenCreatedOn");
      this.SetAttributeValue("overriddencreatedon", value);
      this.OnPropertyChanged("OverriddenCreatedOn");
    }
  }

  /// <summary>
  /// Unique identifier of the manager of the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentsystemuserid")]
  public Microsoft.Xrm.Sdk.EntityReference ParentSystemUserId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentsystemuserid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("ParentSystemUserId");
      this.SetAttributeValue("parentsystemuserid", value);
      this.OnPropertyChanged("ParentSystemUserId");
    }
  }

  /// <summary>
  /// For internal use only.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("passporthi")]
  public System.Nullable<int> PassportHi
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<int>>("passporthi");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("PassportHi");
      this.SetAttributeValue("passporthi", value);
      this.OnPropertyChanged("PassportHi");
    }
  }

  /// <summary>
  /// For internal use only.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("passportlo")]
  public System.Nullable<int> PassportLo
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<int>>("passportlo");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("PassportLo");
      this.SetAttributeValue("passportlo", value);
      this.OnPropertyChanged("PassportLo");
    }
  }

  /// <summary>
  /// Personal email address of the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("personalemailaddress")]
  public string PersonalEMailAddress
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("personalemailaddress");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("PersonalEMailAddress");
      this.SetAttributeValue("personalemailaddress", value);
      this.OnPropertyChanged("PersonalEMailAddress");
    }
  }

  /// <summary>
  /// URL for the Website on which a photo of the user is located.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("photourl")]
  public string PhotoUrl
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("photourl");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("PhotoUrl");
      this.SetAttributeValue("photourl", value);
      this.OnPropertyChanged("PhotoUrl");
    }
  }

  /// <summary>
  /// User's position in hierarchical security model.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("positionid")]
  public Microsoft.Xrm.Sdk.EntityReference PositionId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("positionid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("PositionId");
      this.SetAttributeValue("positionid", value);
      this.OnPropertyChanged("PositionId");
    }
  }

  /// <summary>
  /// Preferred address for the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredaddresscode")]
  public Microsoft.Xrm.Sdk.OptionSetValue PreferredAddressCode
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("preferredaddresscode");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("PreferredAddressCode");
      this.SetAttributeValue("preferredaddresscode", value);
      this.OnPropertyChanged("PreferredAddressCode");
    }
  }

  /// <summary>
  /// Preferred address for the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredaddresscode")]
  public virtual SystemUser_PreferredAddressCode? PreferredAddressCodeEnum
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return ((SystemUser_PreferredAddressCode?)(EntityOptionSetEnum.GetEnum(this, "preferredaddresscode")));
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("PreferredAddressCode");
      this.SetAttributeValue("preferredaddresscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
      this.OnPropertyChanged("PreferredAddressCode");
    }
  }

  /// <summary>
  /// Preferred email address for the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredemailcode")]
  public Microsoft.Xrm.Sdk.OptionSetValue PreferredEmailCode
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("preferredemailcode");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("PreferredEmailCode");
      this.SetAttributeValue("preferredemailcode", value);
      this.OnPropertyChanged("PreferredEmailCode");
    }
  }

  /// <summary>
  /// Preferred email address for the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredemailcode")]
  public virtual SystemUser_PreferredEmailCode? PreferredEmailCodeEnum
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return ((SystemUser_PreferredEmailCode?)(EntityOptionSetEnum.GetEnum(this, "preferredemailcode")));
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("PreferredEmailCode");
      this.SetAttributeValue("preferredemailcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
      this.OnPropertyChanged("PreferredEmailCode");
    }
  }

  /// <summary>
  /// Preferred phone number for the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredphonecode")]
  public Microsoft.Xrm.Sdk.OptionSetValue PreferredPhoneCode
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("preferredphonecode");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("PreferredPhoneCode");
      this.SetAttributeValue("preferredphonecode", value);
      this.OnPropertyChanged("PreferredPhoneCode");
    }
  }

  /// <summary>
  /// Preferred phone number for the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredphonecode")]
  public virtual SystemUser_PreferredPhoneCode? PreferredPhoneCodeEnum
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return ((SystemUser_PreferredPhoneCode?)(EntityOptionSetEnum.GetEnum(this, "preferredphonecode")));
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("PreferredPhoneCode");
      this.SetAttributeValue("preferredphonecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
      this.OnPropertyChanged("PreferredPhoneCode");
    }
  }

  /// <summary>
  /// Shows the ID of the process.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
  public System.Nullable<System.Guid> ProcessId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("ProcessId");
      this.SetAttributeValue("processid", value);
      this.OnPropertyChanged("ProcessId");
    }
  }

  /// <summary>
  /// Unique identifier of the default queue for the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("queueid")]
  public Microsoft.Xrm.Sdk.EntityReference QueueId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("queueid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("QueueId");
      this.SetAttributeValue("queueid", value);
      this.OnPropertyChanged("QueueId");
    }
  }

  /// <summary>
  /// Salutation for correspondence with the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("salutation")]
  public string Salutation
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("salutation");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Salutation");
      this.SetAttributeValue("salutation", value);
      this.OnPropertyChanged("Salutation");
    }
  }

  /// <summary>
  /// Check if user is a setup user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("setupuser")]
  public System.Nullable<bool> SetupUser
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<bool>>("setupuser");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("SetupUser");
      this.SetAttributeValue("setupuser", value);
      this.OnPropertyChanged("SetupUser");
    }
  }

  /// <summary>
  /// SharePoint Work Email Address
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sharepointemailaddress")]
  public string SharePointEmailAddress
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("sharepointemailaddress");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("SharePointEmailAddress");
      this.SetAttributeValue("sharepointemailaddress", value);
      this.OnPropertyChanged("SharePointEmailAddress");
    }
  }

  /// <summary>
  /// Site at which the user is located.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("siteid")]
  public Microsoft.Xrm.Sdk.EntityReference SiteId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("siteid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("SiteId");
      this.SetAttributeValue("siteid", value);
      this.OnPropertyChanged("SiteId");
    }
  }

  /// <summary>
  /// Skill set of the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("skills")]
  public string Skills
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("skills");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Skills");
      this.SetAttributeValue("skills", value);
      this.OnPropertyChanged("Skills");
    }
  }

  /// <summary>
  /// Shows the ID of the stage.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
  public System.Nullable<System.Guid> StageId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("StageId");
      this.SetAttributeValue("stageid", value);
      this.OnPropertyChanged("StageId");
    }
  }

  /// <summary>
  /// Unique identifier for the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("systemuserid")]
  public System.Nullable<System.Guid> SystemUserId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("systemuserid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("SystemUserId");
      this.SetAttributeValue("systemuserid", value);
      if (value.HasValue)
      {
        base.Id = value.Value;
      }
      else
      {
        base.Id = System.Guid.Empty;
      }
      this.OnPropertyChanged("SystemUserId");
    }
  }

  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("systemuserid")]
  public override System.Guid Id
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return base.Id;
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.SystemUserId = value;
    }
  }

  /// <summary>
  /// Unique identifier of the territory to which the user is assigned.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("territoryid")]
  public Microsoft.Xrm.Sdk.EntityReference TerritoryId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("territoryid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("TerritoryId");
      this.SetAttributeValue("territoryid", value);
      this.OnPropertyChanged("TerritoryId");
    }
  }

  /// <summary>
  /// For internal use only.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
  public System.Nullable<int> TimeZoneRuleVersionNumber
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("TimeZoneRuleVersionNumber");
      this.SetAttributeValue("timezoneruleversionnumber", value);
      this.OnPropertyChanged("TimeZoneRuleVersionNumber");
    }
  }

  /// <summary>
  /// Title of the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("title")]
  public string Title
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("title");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Title");
      this.SetAttributeValue("title", value);
      this.OnPropertyChanged("Title");
    }
  }

  /// <summary>
  /// Unique identifier of the currency associated with the systemuser.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
  public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("TransactionCurrencyId");
      this.SetAttributeValue("transactioncurrencyid", value);
      this.OnPropertyChanged("TransactionCurrencyId");
    }
  }

  /// <summary>
  /// For internal use only.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
  public string TraversedPath
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("traversedpath");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("TraversedPath");
      this.SetAttributeValue("traversedpath", value);
      this.OnPropertyChanged("TraversedPath");
    }
  }

  /// <summary>
  /// Shows the type of user license.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("userlicensetype")]
  public System.Nullable<int> UserLicenseType
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<int>>("userlicensetype");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("UserLicenseType");
      this.SetAttributeValue("userlicensetype", value);
      this.OnPropertyChanged("UserLicenseType");
    }
  }

  /// <summary>
  ///  User PUID User Identifiable Information
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("userpuid")]
  public string UserPuid
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("userpuid");
    }
  }

  /// <summary>
  /// Time zone code that was in use when the record was created.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
  public System.Nullable<int> UTCConversionTimeZoneCode
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("UTCConversionTimeZoneCode");
      this.SetAttributeValue("utcconversiontimezonecode", value);
      this.OnPropertyChanged("UTCConversionTimeZoneCode");
    }
  }

  /// <summary>
  /// Version number of the user.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
  public System.Nullable<long> VersionNumber
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
    }
  }

  /// <summary>
  /// Windows Live ID
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("windowsliveid")]
  public string WindowsLiveID
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("windowsliveid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("WindowsLiveID");
      this.SetAttributeValue("windowsliveid", value);
      this.OnPropertyChanged("WindowsLiveID");
    }
  }

  /// <summary>
  /// User's Yammer login email address
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yammeremailaddress")]
  public string YammerEmailAddress
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("yammeremailaddress");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("YammerEmailAddress");
      this.SetAttributeValue("yammeremailaddress", value);
      this.OnPropertyChanged("YammerEmailAddress");
    }
  }

  /// <summary>
  /// User's Yammer ID
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yammeruserid")]
  public string YammerUserId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("yammeruserid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("YammerUserId");
      this.SetAttributeValue("yammeruserid", value);
      this.OnPropertyChanged("YammerUserId");
    }
  }

  /// <summary>
  /// Pronunciation of the first name of the user, written in phonetic hiragana or katakana characters.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yomifirstname")]
  public string YomiFirstName
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("yomifirstname");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("YomiFirstName");
      this.SetAttributeValue("yomifirstname", value);
      this.OnPropertyChanged("YomiFirstName");
    }
  }

  /// <summary>
  /// Pronunciation of the full name of the user, written in phonetic hiragana or katakana characters.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yomifullname")]
  public string YomiFullName
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("yomifullname");
    }
  }

  /// <summary>
  /// Pronunciation of the last name of the user, written in phonetic hiragana or katakana characters.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yomilastname")]
  public string YomiLastName
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("yomilastname");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("YomiLastName");
      this.SetAttributeValue("yomilastname", value);
      this.OnPropertyChanged("YomiLastName");
    }
  }

  /// <summary>
  /// Pronunciation of the middle name of the user, written in phonetic hiragana or katakana characters.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yomimiddlename")]
  public string YomiMiddleName
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("yomimiddlename");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("YomiMiddleName");
      this.SetAttributeValue("yomimiddlename", value);
      this.OnPropertyChanged("YomiMiddleName");
    }
  }

  /// <summary>
  /// 1:N lk_role_createdonbehalfby
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_role_createdonbehalfby")]
  public System.Collections.Generic.IEnumerable<Role> lk_role_createdonbehalfby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<Role>("lk_role_createdonbehalfby", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("lk_role_createdonbehalfby");
      this.SetRelatedEntities<Role>("lk_role_createdonbehalfby", null, value);
      this.OnPropertyChanged("lk_role_createdonbehalfby");
    }
  }

  /// <summary>
  /// 1:N lk_role_modifiedonbehalfby
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_role_modifiedonbehalfby")]
  public System.Collections.Generic.IEnumerable<Role> lk_role_modifiedonbehalfby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<Role>("lk_role_modifiedonbehalfby", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("lk_role_modifiedonbehalfby");
      this.SetRelatedEntities<Role>("lk_role_modifiedonbehalfby", null, value);
      this.OnPropertyChanged("lk_role_modifiedonbehalfby");
    }
  }

  /// <summary>
  /// 1:N lk_rolebase_createdby
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_rolebase_createdby")]
  public System.Collections.Generic.IEnumerable<Role> lk_rolebase_createdby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<Role>("lk_rolebase_createdby", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("lk_rolebase_createdby");
      this.SetRelatedEntities<Role>("lk_rolebase_createdby", null, value);
      this.OnPropertyChanged("lk_rolebase_createdby");
    }
  }

  /// <summary>
  /// 1:N lk_rolebase_modifiedby
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_rolebase_modifiedby")]
  public System.Collections.Generic.IEnumerable<Role> lk_rolebase_modifiedby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<Role>("lk_rolebase_modifiedby", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("lk_rolebase_modifiedby");
      this.SetRelatedEntities<Role>("lk_rolebase_modifiedby", null, value);
      this.OnPropertyChanged("lk_rolebase_modifiedby");
    }
  }

  /// <summary>
  /// 1:N lk_systemuser_createdonbehalfby
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_systemuser_createdonbehalfby", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
  public System.Collections.Generic.IEnumerable<SystemUser> Referencedlk_systemuser_createdonbehalfby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<SystemUser>("lk_systemuser_createdonbehalfby", Microsoft.Xrm.Sdk.EntityRole.Referenced);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Referencedlk_systemuser_createdonbehalfby");
      this.SetRelatedEntities<SystemUser>("lk_systemuser_createdonbehalfby", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
      this.OnPropertyChanged("Referencedlk_systemuser_createdonbehalfby");
    }
  }

  /// <summary>
  /// 1:N lk_systemuser_modifiedonbehalfby
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_systemuser_modifiedonbehalfby", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
  public System.Collections.Generic.IEnumerable<SystemUser> Referencedlk_systemuser_modifiedonbehalfby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<SystemUser>("lk_systemuser_modifiedonbehalfby", Microsoft.Xrm.Sdk.EntityRole.Referenced);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Referencedlk_systemuser_modifiedonbehalfby");
      this.SetRelatedEntities<SystemUser>("lk_systemuser_modifiedonbehalfby", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
      this.OnPropertyChanged("Referencedlk_systemuser_modifiedonbehalfby");
    }
  }

  /// <summary>
  /// 1:N lk_systemuserbase_createdby
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_systemuserbase_createdby", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
  public System.Collections.Generic.IEnumerable<SystemUser> Referencedlk_systemuserbase_createdby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<SystemUser>("lk_systemuserbase_createdby", Microsoft.Xrm.Sdk.EntityRole.Referenced);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Referencedlk_systemuserbase_createdby");
      this.SetRelatedEntities<SystemUser>("lk_systemuserbase_createdby", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
      this.OnPropertyChanged("Referencedlk_systemuserbase_createdby");
    }
  }

  /// <summary>
  /// 1:N lk_systemuserbase_modifiedby
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_systemuserbase_modifiedby", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
  public System.Collections.Generic.IEnumerable<SystemUser> Referencedlk_systemuserbase_modifiedby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<SystemUser>("lk_systemuserbase_modifiedby", Microsoft.Xrm.Sdk.EntityRole.Referenced);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Referencedlk_systemuserbase_modifiedby");
      this.SetRelatedEntities<SystemUser>("lk_systemuserbase_modifiedby", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
      this.OnPropertyChanged("Referencedlk_systemuserbase_modifiedby");
    }
  }

  /// <summary>
  /// 1:N lk_team_createdonbehalfby
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_team_createdonbehalfby")]
  public System.Collections.Generic.IEnumerable<Team> lk_team_createdonbehalfby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<Team>("lk_team_createdonbehalfby", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("lk_team_createdonbehalfby");
      this.SetRelatedEntities<Team>("lk_team_createdonbehalfby", null, value);
      this.OnPropertyChanged("lk_team_createdonbehalfby");
    }
  }

  /// <summary>
  /// 1:N lk_team_modifiedonbehalfby
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_team_modifiedonbehalfby")]
  public System.Collections.Generic.IEnumerable<Team> lk_team_modifiedonbehalfby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<Team>("lk_team_modifiedonbehalfby", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("lk_team_modifiedonbehalfby");
      this.SetRelatedEntities<Team>("lk_team_modifiedonbehalfby", null, value);
      this.OnPropertyChanged("lk_team_modifiedonbehalfby");
    }
  }

  /// <summary>
  /// 1:N lk_teambase_administratorid
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_teambase_administratorid")]
  public System.Collections.Generic.IEnumerable<Team> lk_teambase_administratorid
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<Team>("lk_teambase_administratorid", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("lk_teambase_administratorid");
      this.SetRelatedEntities<Team>("lk_teambase_administratorid", null, value);
      this.OnPropertyChanged("lk_teambase_administratorid");
    }
  }

  /// <summary>
  /// 1:N lk_teambase_createdby
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_teambase_createdby")]
  public System.Collections.Generic.IEnumerable<Team> lk_teambase_createdby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<Team>("lk_teambase_createdby", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("lk_teambase_createdby");
      this.SetRelatedEntities<Team>("lk_teambase_createdby", null, value);
      this.OnPropertyChanged("lk_teambase_createdby");
    }
  }

  /// <summary>
  /// 1:N lk_teambase_modifiedby
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_teambase_modifiedby")]
  public System.Collections.Generic.IEnumerable<Team> lk_teambase_modifiedby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<Team>("lk_teambase_modifiedby", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("lk_teambase_modifiedby");
      this.SetRelatedEntities<Team>("lk_teambase_modifiedby", null, value);
      this.OnPropertyChanged("lk_teambase_modifiedby");
    }
  }

  /// <summary>
  /// 1:N user_parent_user
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_parent_user", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
  public System.Collections.Generic.IEnumerable<SystemUser> Referenceduser_parent_user
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<SystemUser>("user_parent_user", Microsoft.Xrm.Sdk.EntityRole.Referenced);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Referenceduser_parent_user");
      this.SetRelatedEntities<SystemUser>("user_parent_user", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
      this.OnPropertyChanged("Referenceduser_parent_user");
    }
  }

  /// <summary>
  /// N:N systemuserroles_association
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("systemuserroles_association")]
  public System.Collections.Generic.IEnumerable<Role> systemuserroles_association
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<Role>("systemuserroles_association", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("systemuserroles_association");
      this.SetRelatedEntities<Role>("systemuserroles_association", null, value);
      this.OnPropertyChanged("systemuserroles_association");
    }
  }

  /// <summary>
  /// N:N teammembership_association
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("teammembership_association")]
  public System.Collections.Generic.IEnumerable<Team> teammembership_association
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<Team>("teammembership_association", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("teammembership_association");
      this.SetRelatedEntities<Team>("teammembership_association", null, value);
      this.OnPropertyChanged("teammembership_association");
    }
  }

  /// <summary>
  /// N:1 lk_systemuser_createdonbehalfby
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_systemuser_createdonbehalfby", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
  public SystemUser Referencinglk_systemuser_createdonbehalfby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntity<SystemUser>("lk_systemuser_createdonbehalfby", Microsoft.Xrm.Sdk.EntityRole.Referencing);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Referencinglk_systemuser_createdonbehalfby");
      this.SetRelatedEntity<SystemUser>("lk_systemuser_createdonbehalfby", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
      this.OnPropertyChanged("Referencinglk_systemuser_createdonbehalfby");
    }
  }

  /// <summary>
  /// N:1 lk_systemuser_modifiedonbehalfby
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_systemuser_modifiedonbehalfby", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
  public SystemUser Referencinglk_systemuser_modifiedonbehalfby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntity<SystemUser>("lk_systemuser_modifiedonbehalfby", Microsoft.Xrm.Sdk.EntityRole.Referencing);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Referencinglk_systemuser_modifiedonbehalfby");
      this.SetRelatedEntity<SystemUser>("lk_systemuser_modifiedonbehalfby", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
      this.OnPropertyChanged("Referencinglk_systemuser_modifiedonbehalfby");
    }
  }

  /// <summary>
  /// N:1 lk_systemuserbase_createdby
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_systemuserbase_createdby", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
  public SystemUser Referencinglk_systemuserbase_createdby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntity<SystemUser>("lk_systemuserbase_createdby", Microsoft.Xrm.Sdk.EntityRole.Referencing);
    }
  }

  /// <summary>
  /// N:1 lk_systemuserbase_modifiedby
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_systemuserbase_modifiedby", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
  public SystemUser Referencinglk_systemuserbase_modifiedby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntity<SystemUser>("lk_systemuserbase_modifiedby", Microsoft.Xrm.Sdk.EntityRole.Referencing);
    }
  }

  /// <summary>
  /// N:1 user_parent_user
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentsystemuserid")]
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_parent_user", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
  public SystemUser Referencinguser_parent_user
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntity<SystemUser>("user_parent_user", Microsoft.Xrm.Sdk.EntityRole.Referencing);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Referencinguser_parent_user");
      this.SetRelatedEntity<SystemUser>("user_parent_user", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
      this.OnPropertyChanged("Referencinguser_parent_user");
    }
  }

  /// <summary>
  /// Constructor for populating via LINQ queries given a LINQ anonymous type
  /// <param name="anonymousType">LINQ anonymous type.</param>
  /// </summary>
  [System.Diagnostics.DebuggerNonUserCode()]
  public SystemUser(object anonymousType) :
      this()
  {
    foreach (var p in anonymousType.GetType().GetProperties())
    {
      var value = p.GetValue(anonymousType, null);
      var name = p.Name.ToLower();

      if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
      {
        value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
        name = name.Remove(name.Length - "enum".Length);
      }

      switch (name)
      {
        case "id":
          base.Id = (System.Guid)value;
          Attributes["systemuserid"] = base.Id;
          break;
        case "systemuserid":
          var id = (System.Nullable<System.Guid>)value;
          if (id == null) { continue; }
          base.Id = id.Value;
          Attributes[name] = base.Id;
          break;
        case "formattedvalues":
          // Add Support for FormattedValues
          FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
          break;
        default:
          Attributes[name] = value;
          break;
      }
    }
  }
}

/// <summary>
/// 
/// </summary>
[System.Runtime.Serialization.DataContractAttribute()]
[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("systemuserroles")]
public partial class SystemUserRoles : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
{

  public static class Fields
  {
    public const string RoleId = "roleid";
    public const string SystemUserId = "systemuserid";
    public const string SystemUserRoleId = "systemuserroleid";
    public const string Id = "systemuserroleid";
    public const string VersionNumber = "versionnumber";
  }

  /// <summary>
  /// Default Constructor.
  /// </summary>
  [System.Diagnostics.DebuggerNonUserCode()]
  public SystemUserRoles() :
      base(EntityLogicalName)
  {
  }

  public const string EntityLogicalName = "systemuserroles";

  public const string EntitySchemaName = "SystemUserRoles";

  public const string PrimaryIdAttribute = "systemuserroleid";

  public const string EntityLogicalCollectionName = null;

  public const string EntitySetName = "systemuserrolescollection";

  public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

  public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;

  [System.Diagnostics.DebuggerNonUserCode()]
  private void OnPropertyChanged(string propertyName)
  {
    if ((this.PropertyChanged != null))
    {
      this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
    }
  }

  [System.Diagnostics.DebuggerNonUserCode()]
  private void OnPropertyChanging(string propertyName)
  {
    if ((this.PropertyChanging != null))
    {
      this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("roleid")]
  public System.Nullable<System.Guid> RoleId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("roleid");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("systemuserid")]
  public System.Nullable<System.Guid> SystemUserId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("systemuserid");
    }
  }

  /// <summary>
  /// For internal use only.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("systemuserroleid")]
  public System.Nullable<System.Guid> SystemUserRoleId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("systemuserroleid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("SystemUserRoleId");
      this.SetAttributeValue("systemuserroleid", value);
      if (value.HasValue)
      {
        base.Id = value.Value;
      }
      else
      {
        base.Id = System.Guid.Empty;
      }
      this.OnPropertyChanged("SystemUserRoleId");
    }
  }

  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("systemuserroleid")]
  public override System.Guid Id
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return base.Id;
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.SystemUserRoleId = value;
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
  public System.Nullable<long> VersionNumber
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
    }
  }

  /// <summary>
  /// N:N systemuserroles_association
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("systemuserroles_association")]
  public System.Collections.Generic.IEnumerable<SystemUser> systemuserroles_association
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<SystemUser>("systemuserroles_association", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("systemuserroles_association");
      this.SetRelatedEntities<SystemUser>("systemuserroles_association", null, value);
      this.OnPropertyChanged("systemuserroles_association");
    }
  }

  /// <summary>
  /// Constructor for populating via LINQ queries given a LINQ anonymous type
  /// <param name="anonymousType">LINQ anonymous type.</param>
  /// </summary>
  [System.Diagnostics.DebuggerNonUserCode()]
  public SystemUserRoles(object anonymousType) :
      this()
  {
    foreach (var p in anonymousType.GetType().GetProperties())
    {
      var value = p.GetValue(anonymousType, null);
      var name = p.Name.ToLower();

      if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
      {
        value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
        name = name.Remove(name.Length - "enum".Length);
      }

      switch (name)
      {
        case "id":
          base.Id = (System.Guid)value;
          Attributes["systemuserroleid"] = base.Id;
          break;
        case "systemuserroleid":
          var id = (System.Nullable<System.Guid>)value;
          if (id == null) { continue; }
          base.Id = id.Value;
          Attributes[name] = base.Id;
          break;
        case "formattedvalues":
          // Add Support for FormattedValues
          FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
          break;
        default:
          Attributes[name] = value;
          break;
      }
    }
  }
}

/// <summary>
/// Collection of system users that routinely collaborate. Teams can be used to simplify record sharing and provide team members with common access to organization data when team members belong to different Business Units.
/// </summary>
[System.Runtime.Serialization.DataContractAttribute()]
[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("team")]
public partial class Team : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
{

  public static class Fields
  {
    public const string AdministratorId = "administratorid";
    public const string AzureActiveDirectoryObjectId = "azureactivedirectoryobjectid";
    public const string BusinessUnitId = "businessunitid";
    public const string CreatedBy = "createdby";
    public const string CreatedOn = "createdon";
    public const string CreatedOnBehalfBy = "createdonbehalfby";
    public const string Description = "description";
    public const string EMailAddress = "emailaddress";
    public const string ExchangeRate = "exchangerate";
    public const string ImportSequenceNumber = "importsequencenumber";
    public const string IsDefault = "isdefault";
    public const string MembershipType = "membershiptype";
    public const string ModifiedBy = "modifiedby";
    public const string ModifiedOn = "modifiedon";
    public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
    public const string Name = "name";
    public const string OrganizationId = "organizationid";
    public const string OverriddenCreatedOn = "overriddencreatedon";
    public const string ProcessId = "processid";
    public const string QueueId = "queueid";
    public const string RegardingObjectId = "regardingobjectid";
    public const string StageId = "stageid";
    public const string SystemManaged = "systemmanaged";
    public const string TeamId = "teamid";
    public const string Id = "teamid";
    public const string TeamTemplateId = "teamtemplateid";
    public const string TeamType = "teamtype";
    public const string TransactionCurrencyId = "transactioncurrencyid";
    public const string TraversedPath = "traversedpath";
    public const string VersionNumber = "versionnumber";
    public const string YomiName = "yominame";
    public const string lk_team_createdonbehalfby = "lk_team_createdonbehalfby";
    public const string lk_team_modifiedonbehalfby = "lk_team_modifiedonbehalfby";
    public const string lk_teambase_administratorid = "lk_teambase_administratorid";
    public const string lk_teambase_createdby = "lk_teambase_createdby";
    public const string lk_teambase_modifiedby = "lk_teambase_modifiedby";
  }

  /// <summary>
  /// Default Constructor.
  /// </summary>
  [System.Diagnostics.DebuggerNonUserCode()]
  public Team() :
      base(EntityLogicalName)
  {
  }

  public const string AlternateKeys = "azureactivedirectoryobjectid,membershiptype";

  public const string EntityLogicalName = "team";

  public const string EntitySchemaName = "Team";

  public const string PrimaryIdAttribute = "teamid";

  public const string PrimaryNameAttribute = "name";

  public const string EntityLogicalCollectionName = "teams";

  public const string EntitySetName = "teams";

  public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

  public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;

  [System.Diagnostics.DebuggerNonUserCode()]
  private void OnPropertyChanged(string propertyName)
  {
    if ((this.PropertyChanged != null))
    {
      this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
    }
  }

  [System.Diagnostics.DebuggerNonUserCode()]
  private void OnPropertyChanging(string propertyName)
  {
    if ((this.PropertyChanging != null))
    {
      this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
    }
  }

  /// <summary>
  /// Unique identifier of the user primary responsible for the team.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("administratorid")]
  public Microsoft.Xrm.Sdk.EntityReference AdministratorId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("administratorid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("AdministratorId");
      this.SetAttributeValue("administratorid", value);
      this.OnPropertyChanged("AdministratorId");
    }
  }

  /// <summary>
  /// The Azure active directory object Id for a group.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("azureactivedirectoryobjectid")]
  public System.Nullable<System.Guid> AzureActiveDirectoryObjectId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("azureactivedirectoryobjectid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("AzureActiveDirectoryObjectId");
      this.SetAttributeValue("azureactivedirectoryobjectid", value);
      this.OnPropertyChanged("AzureActiveDirectoryObjectId");
    }
  }

  /// <summary>
  /// Unique identifier of the business unit with which the team is associated.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitid")]
  public Microsoft.Xrm.Sdk.EntityReference BusinessUnitId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("businessunitid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("BusinessUnitId");
      this.SetAttributeValue("businessunitid", value);
      this.OnPropertyChanged("BusinessUnitId");
    }
  }

  /// <summary>
  /// Unique identifier of the user who created the team.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
  public Microsoft.Xrm.Sdk.EntityReference CreatedBy
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
    }
  }

  /// <summary>
  /// Date and time when the team was created.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
  public System.Nullable<System.DateTime> CreatedOn
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
    }
  }

  /// <summary>
  /// Unique identifier of the delegate user who created the team.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
  public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("CreatedOnBehalfBy");
      this.SetAttributeValue("createdonbehalfby", value);
      this.OnPropertyChanged("CreatedOnBehalfBy");
    }
  }

  /// <summary>
  /// Description of the team.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
  public string Description
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("description");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Description");
      this.SetAttributeValue("description", value);
      this.OnPropertyChanged("Description");
    }
  }

  /// <summary>
  /// Email address for the team.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress")]
  public string EMailAddress
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("emailaddress");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("EMailAddress");
      this.SetAttributeValue("emailaddress", value);
      this.OnPropertyChanged("EMailAddress");
    }
  }

  /// <summary>
  /// Exchange rate for the currency associated with the team with respect to the base currency.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
  public System.Nullable<decimal> ExchangeRate
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
    }
  }

  /// <summary>
  /// Unique identifier of the data import or data migration that created this record.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
  public System.Nullable<int> ImportSequenceNumber
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("ImportSequenceNumber");
      this.SetAttributeValue("importsequencenumber", value);
      this.OnPropertyChanged("ImportSequenceNumber");
    }
  }

  /// <summary>
  /// Information about whether the team is a default business unit team.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdefault")]
  public System.Nullable<bool> IsDefault
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<bool>>("isdefault");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("membershiptype")]
  public Microsoft.Xrm.Sdk.OptionSetValue MembershipType
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("membershiptype");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("MembershipType");
      this.SetAttributeValue("membershiptype", value);
      this.OnPropertyChanged("MembershipType");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("membershiptype")]
  public virtual Team_MembershipType? MembershipTypeEnum
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return ((Team_MembershipType?)(EntityOptionSetEnum.GetEnum(this, "membershiptype")));
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("MembershipType");
      this.SetAttributeValue("membershiptype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
      this.OnPropertyChanged("MembershipType");
    }
  }

  /// <summary>
  /// Unique identifier of the user who last modified the team.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
  public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
    }
  }

  /// <summary>
  /// Date and time when the team was last modified.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
  public System.Nullable<System.DateTime> ModifiedOn
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
    }
  }

  /// <summary>
  /// Unique identifier of the delegate user who last modified the team.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
  public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("ModifiedOnBehalfBy");
      this.SetAttributeValue("modifiedonbehalfby", value);
      this.OnPropertyChanged("ModifiedOnBehalfBy");
    }
  }

  /// <summary>
  /// Name of the team.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
  public string Name
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("name");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("Name");
      this.SetAttributeValue("name", value);
      this.OnPropertyChanged("Name");
    }
  }

  /// <summary>
  /// Unique identifier of the organization associated with the team.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
  public System.Nullable<System.Guid> OrganizationId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("organizationid");
    }
  }

  /// <summary>
  /// Date and time that the record was migrated.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
  public System.Nullable<System.DateTime> OverriddenCreatedOn
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("OverriddenCreatedOn");
      this.SetAttributeValue("overriddencreatedon", value);
      this.OnPropertyChanged("OverriddenCreatedOn");
    }
  }

  /// <summary>
  /// Shows the ID of the process.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
  public System.Nullable<System.Guid> ProcessId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("ProcessId");
      this.SetAttributeValue("processid", value);
      this.OnPropertyChanged("ProcessId");
    }
  }

  /// <summary>
  /// Unique identifier of the default queue for the team.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("queueid")]
  public Microsoft.Xrm.Sdk.EntityReference QueueId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("queueid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("QueueId");
      this.SetAttributeValue("queueid", value);
      this.OnPropertyChanged("QueueId");
    }
  }

  /// <summary>
  /// Choose the record that the team relates to.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
  public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("RegardingObjectId");
      this.SetAttributeValue("regardingobjectid", value);
      this.OnPropertyChanged("RegardingObjectId");
    }
  }

  /// <summary>
  /// Shows the ID of the stage.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
  public System.Nullable<System.Guid> StageId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("StageId");
      this.SetAttributeValue("stageid", value);
      this.OnPropertyChanged("StageId");
    }
  }

  /// <summary>
  /// Select whether the team will be managed by the system.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("systemmanaged")]
  public System.Nullable<bool> SystemManaged
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<bool>>("systemmanaged");
    }
  }

  /// <summary>
  /// Unique identifier for the team.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamid")]
  public System.Nullable<System.Guid> TeamId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("teamid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("TeamId");
      this.SetAttributeValue("teamid", value);
      if (value.HasValue)
      {
        base.Id = value.Value;
      }
      else
      {
        base.Id = System.Guid.Empty;
      }
      this.OnPropertyChanged("TeamId");
    }
  }

  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamid")]
  public override System.Guid Id
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return base.Id;
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.TeamId = value;
    }
  }

  /// <summary>
  /// Shows the team template that is associated with the team.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamtemplateid")]
  public Microsoft.Xrm.Sdk.EntityReference TeamTemplateId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("teamtemplateid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("TeamTemplateId");
      this.SetAttributeValue("teamtemplateid", value);
      this.OnPropertyChanged("TeamTemplateId");
    }
  }

  /// <summary>
  /// Select the team type.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamtype")]
  public Microsoft.Xrm.Sdk.OptionSetValue TeamType
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("teamtype");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("TeamType");
      this.SetAttributeValue("teamtype", value);
      this.OnPropertyChanged("TeamType");
    }
  }

  /// <summary>
  /// Select the team type.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamtype")]
  public virtual Team_TeamType? TeamTypeEnum
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return ((Team_TeamType?)(EntityOptionSetEnum.GetEnum(this, "teamtype")));
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("TeamType");
      this.SetAttributeValue("teamtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
      this.OnPropertyChanged("TeamType");
    }
  }

  /// <summary>
  /// Unique identifier of the currency associated with the team.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
  public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("TransactionCurrencyId");
      this.SetAttributeValue("transactioncurrencyid", value);
      this.OnPropertyChanged("TransactionCurrencyId");
    }
  }

  /// <summary>
  /// For internal use only.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
  public string TraversedPath
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("traversedpath");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("TraversedPath");
      this.SetAttributeValue("traversedpath", value);
      this.OnPropertyChanged("TraversedPath");
    }
  }

  /// <summary>
  /// Version number of the team.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
  public System.Nullable<long> VersionNumber
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
    }
  }

  /// <summary>
  /// Pronunciation of the full name of the team, written in phonetic hiragana or katakana characters.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yominame")]
  public string YomiName
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<string>("yominame");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("YomiName");
      this.SetAttributeValue("yominame", value);
      this.OnPropertyChanged("YomiName");
    }
  }

  /// <summary>
  /// N:N teammembership_association
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("teammembership_association")]
  public System.Collections.Generic.IEnumerable<SystemUser> teammembership_association
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<SystemUser>("teammembership_association", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("teammembership_association");
      this.SetRelatedEntities<SystemUser>("teammembership_association", null, value);
      this.OnPropertyChanged("teammembership_association");
    }
  }

  /// <summary>
  /// N:N teamroles_association
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("teamroles_association")]
  public System.Collections.Generic.IEnumerable<Role> teamroles_association
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<Role>("teamroles_association", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("teamroles_association");
      this.SetRelatedEntities<Role>("teamroles_association", null, value);
      this.OnPropertyChanged("teamroles_association");
    }
  }

  /// <summary>
  /// N:1 lk_team_createdonbehalfby
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_team_createdonbehalfby")]
  public SystemUser lk_team_createdonbehalfby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntity<SystemUser>("lk_team_createdonbehalfby", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("lk_team_createdonbehalfby");
      this.SetRelatedEntity<SystemUser>("lk_team_createdonbehalfby", null, value);
      this.OnPropertyChanged("lk_team_createdonbehalfby");
    }
  }

  /// <summary>
  /// N:1 lk_team_modifiedonbehalfby
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_team_modifiedonbehalfby")]
  public SystemUser lk_team_modifiedonbehalfby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntity<SystemUser>("lk_team_modifiedonbehalfby", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("lk_team_modifiedonbehalfby");
      this.SetRelatedEntity<SystemUser>("lk_team_modifiedonbehalfby", null, value);
      this.OnPropertyChanged("lk_team_modifiedonbehalfby");
    }
  }

  /// <summary>
  /// N:1 lk_teambase_administratorid
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("administratorid")]
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_teambase_administratorid")]
  public SystemUser lk_teambase_administratorid
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntity<SystemUser>("lk_teambase_administratorid", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("lk_teambase_administratorid");
      this.SetRelatedEntity<SystemUser>("lk_teambase_administratorid", null, value);
      this.OnPropertyChanged("lk_teambase_administratorid");
    }
  }

  /// <summary>
  /// N:1 lk_teambase_createdby
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_teambase_createdby")]
  public SystemUser lk_teambase_createdby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntity<SystemUser>("lk_teambase_createdby", null);
    }
  }

  /// <summary>
  /// N:1 lk_teambase_modifiedby
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_teambase_modifiedby")]
  public SystemUser lk_teambase_modifiedby
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntity<SystemUser>("lk_teambase_modifiedby", null);
    }
  }

  /// <summary>
  /// Constructor for populating via LINQ queries given a LINQ anonymous type
  /// <param name="anonymousType">LINQ anonymous type.</param>
  /// </summary>
  [System.Diagnostics.DebuggerNonUserCode()]
  public Team(object anonymousType) :
      this()
  {
    foreach (var p in anonymousType.GetType().GetProperties())
    {
      var value = p.GetValue(anonymousType, null);
      var name = p.Name.ToLower();

      if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
      {
        value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
        name = name.Remove(name.Length - "enum".Length);
      }

      switch (name)
      {
        case "id":
          base.Id = (System.Guid)value;
          Attributes["teamid"] = base.Id;
          break;
        case "teamid":
          var id = (System.Nullable<System.Guid>)value;
          if (id == null) { continue; }
          base.Id = id.Value;
          Attributes[name] = base.Id;
          break;
        case "formattedvalues":
          // Add Support for FormattedValues
          FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
          break;
        default:
          Attributes[name] = value;
          break;
      }
    }
  }
}

/// <summary>
/// 
/// </summary>
[System.Runtime.Serialization.DataContractAttribute()]
[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("teammembership")]
public partial class TeamMembership : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
{

  public static class Fields
  {
    public const string SystemUserId = "systemuserid";
    public const string TeamId = "teamid";
    public const string TeamMembershipId = "teammembershipid";
    public const string Id = "teammembershipid";
    public const string VersionNumber = "versionnumber";
  }

  /// <summary>
  /// Default Constructor.
  /// </summary>
  [System.Diagnostics.DebuggerNonUserCode()]
  public TeamMembership() :
      base(EntityLogicalName)
  {
  }

  public const string EntityLogicalName = "teammembership";

  public const string EntitySchemaName = "TeamMembership";

  public const string PrimaryIdAttribute = "teammembershipid";

  public const string EntityLogicalCollectionName = null;

  public const string EntitySetName = "teammemberships";

  public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

  public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;

  [System.Diagnostics.DebuggerNonUserCode()]
  private void OnPropertyChanged(string propertyName)
  {
    if ((this.PropertyChanged != null))
    {
      this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
    }
  }

  [System.Diagnostics.DebuggerNonUserCode()]
  private void OnPropertyChanging(string propertyName)
  {
    if ((this.PropertyChanging != null))
    {
      this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("systemuserid")]
  public System.Nullable<System.Guid> SystemUserId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("systemuserid");
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamid")]
  public System.Nullable<System.Guid> TeamId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("teamid");
    }
  }

  /// <summary>
  /// Unique identifier of the team membership.
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teammembershipid")]
  public System.Nullable<System.Guid> TeamMembershipId
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<System.Guid>>("teammembershipid");
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("TeamMembershipId");
      this.SetAttributeValue("teammembershipid", value);
      if (value.HasValue)
      {
        base.Id = value.Value;
      }
      else
      {
        base.Id = System.Guid.Empty;
      }
      this.OnPropertyChanged("TeamMembershipId");
    }
  }

  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teammembershipid")]
  public override System.Guid Id
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return base.Id;
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.TeamMembershipId = value;
    }
  }

  /// <summary>
  /// 
  /// </summary>
  [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
  public System.Nullable<long> VersionNumber
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
    }
  }

  /// <summary>
  /// N:N teammembership_association
  /// </summary>
  [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("teammembership_association")]
  public System.Collections.Generic.IEnumerable<Team> teammembership_association
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.GetRelatedEntities<Team>("teammembership_association", null);
    }
    [System.Diagnostics.DebuggerNonUserCode()]
    set
    {
      this.OnPropertyChanging("teammembership_association");
      this.SetRelatedEntities<Team>("teammembership_association", null, value);
      this.OnPropertyChanged("teammembership_association");
    }
  }

  /// <summary>
  /// Constructor for populating via LINQ queries given a LINQ anonymous type
  /// <param name="anonymousType">LINQ anonymous type.</param>
  /// </summary>
  [System.Diagnostics.DebuggerNonUserCode()]
  public TeamMembership(object anonymousType) :
      this()
  {
    foreach (var p in anonymousType.GetType().GetProperties())
    {
      var value = p.GetValue(anonymousType, null);
      var name = p.Name.ToLower();

      if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
      {
        value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
        name = name.Remove(name.Length - "enum".Length);
      }

      switch (name)
      {
        case "id":
          base.Id = (System.Guid)value;
          Attributes["teammembershipid"] = base.Id;
          break;
        case "teammembershipid":
          var id = (System.Nullable<System.Guid>)value;
          if (id == null) { continue; }
          base.Id = id.Value;
          Attributes[name] = base.Id;
          break;
        case "formattedvalues":
          // Add Support for FormattedValues
          FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
          break;
        default:
          Attributes[name] = value;
          break;
      }
    }
  }
}

/// <summary>
/// Represents a source of entities bound to a CRM service. It tracks and manages changes made to the retrieved entities.
/// </summary>
public partial class CrmServiceContext : Microsoft.Xrm.Sdk.Client.OrganizationServiceContext
{

  /// <summary>
  /// Constructor.
  /// </summary>
  [System.Diagnostics.DebuggerNonUserCode()]
  public CrmServiceContext(Microsoft.Xrm.Sdk.IOrganizationService service) :
      base(service)
  {
  }

  /// <summary>
  /// Gets a binding to the set of all <see cref="Role"/> entities.
  /// </summary>
  public System.Linq.IQueryable<Role> RoleSet
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.CreateQuery<Role>();
    }
  }

  /// <summary>
  /// Gets a binding to the set of all <see cref="SystemUser"/> entities.
  /// </summary>
  public System.Linq.IQueryable<SystemUser> SystemUserSet
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.CreateQuery<SystemUser>();
    }
  }

  /// <summary>
  /// Gets a binding to the set of all <see cref="SystemUserRoles"/> entities.
  /// </summary>
  public System.Linq.IQueryable<SystemUserRoles> SystemUserRolesSet
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.CreateQuery<SystemUserRoles>();
    }
  }

  /// <summary>
  /// Gets a binding to the set of all <see cref="Team"/> entities.
  /// </summary>
  public System.Linq.IQueryable<Team> TeamSet
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.CreateQuery<Team>();
    }
  }

  /// <summary>
  /// Gets a binding to the set of all <see cref="TeamMembership"/> entities.
  /// </summary>
  public System.Linq.IQueryable<TeamMembership> TeamMembershipSet
  {
    [System.Diagnostics.DebuggerNonUserCode()]
    get
    {
      return this.CreateQuery<TeamMembership>();
    }
  }
}

internal sealed class EntityOptionSetEnum
{

  [System.Diagnostics.DebuggerNonUserCode()]
  public static System.Nullable<int> GetEnum(Microsoft.Xrm.Sdk.Entity entity, string attributeLogicalName)
  {
    if (entity.Attributes.ContainsKey(attributeLogicalName))
    {
      Microsoft.Xrm.Sdk.OptionSetValue value = entity.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(attributeLogicalName);
      if (value != null)
      {
        return value.Value;
      }
    }
    return null;
  }
}

/// <summary>
/// Attribute to handle storing the OptionSet's Metadata.
/// </summary>
[System.AttributeUsageAttribute(System.AttributeTargets.Field)]
public sealed class OptionSetMetadataAttribute : System.Attribute
{

  /// <summary>
  /// Color of the OptionSetValue.
  /// </summary>
  public string Color { get; set; }

  /// <summary>
  /// Description of the OptionSetValue.
  /// </summary>
  public string Description { get; set; }

  /// <summary>
  /// Display order index of the OptionSetValue.
  /// </summary>
  public int DisplayIndex { get; set; }

  /// <summary>
  /// External value of the OptionSetValue.
  /// </summary>
  public string ExternalValue { get; set; }

  /// <summary>
  /// Name of the OptionSetValue.
  /// </summary>
  public string Name { get; set; }

  /// <summary>
  /// Initializes a new instance of the <see cref="OptionSetMetadataAttribute"/> class.
  /// </summary>
  /// <param name="name">Name of the value.</param>
  /// <param name="displayIndex">Display order index of the value.</param>
  /// <param name="color">Color of the value.</param>
  /// <param name="description">Description of the value.</param>
  /// <param name="externalValue">External value of the value.</param>
  [System.Diagnostics.DebuggerNonUserCode()]
  public OptionSetMetadataAttribute(string name, int displayIndex, string color = null, string description = null, string externalValue = null)
  {
    this.Color = color;
    this.Description = description;
    this.ExternalValue = externalValue;
    this.DisplayIndex = displayIndex;
    this.Name = name;
  }
}

/// <summary>
/// Extension class to handle retrieving of OptionSetMetadataAttribute.
/// </summary>
public static class OptionSetExtension
{

  /// <summary>
  /// Returns the OptionSetMetadataAttribute for the given enum value
  /// </summary>
  /// <typeparam name="T">OptionSet Enum Type</typeparam>
  /// <param name="value">Enum Value with OptionSetMetadataAttribute</param>
  [System.Diagnostics.DebuggerNonUserCode()]
  public static OptionSetMetadataAttribute GetMetadata<T>(this T value)
    where T : struct, System.IConvertible
  {
    System.Type enumType = typeof(T);
    if (!enumType.IsEnum)
    {
      throw new System.ArgumentException("T must be an enum!");
    }
    System.Reflection.MemberInfo[] members = enumType.GetMember(value.ToString());
    for (int i = 0; (i < members.Length); i++
    )
    {
      System.Attribute attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(members[i], typeof(OptionSetMetadataAttribute));
      if (attribute != null)
      {
        return ((OptionSetMetadataAttribute)(attribute));
      }
    }
    throw new System.ArgumentException("T must be an enum adorned with an OptionSetMetadataAttribute!");
  }
}
}
